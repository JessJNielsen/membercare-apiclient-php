<?php
/**
 * Person
 *
 * PHP version 5
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Membercare API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@membercare.dk
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Membercare\Client\Model;

use \ArrayAccess;
use \Membercare\Client\ObjectSerializer;

/**
 * Person Class Doc Comment
 *
 * @category Class
 * @description Representation of a Person for exposure in the WebApi
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Person implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Person';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'url' => 'string',
        'debtor_account_number' => 'string',
        'name' => 'string',
        'contacts' => '\Membercare\Client\Model\Contact[]',
        'addresses' => '\Membercare\Client\Model\PostalAddress[]',
        'custom_field_values' => '\Membercare\Client\Model\CustomFieldValue[]',
        'invoices_link' => 'string',
        'member_type' => '\Membercare\Client\Model\UnitType',
        'default_payer_link' => 'string',
        'dafualt_payer_rule' => '\Membercare\Client\Model\PayerRule',
        'close_date' => '\DateTime',
        'einvoice_ean' => 'string',
        'einvoice_email' => 'string',
        'close_reason' => '\Membercare\Client\Model\CloseReason',
        'default_address_type' => '\Membercare\Client\Model\AddressRule',
        'external_id' => 'string',
        'last_change' => '\DateTime',
        'finance_type' => '\Membercare\Client\Model\FinanceType',
        'relations_link' => 'string',
        'firstname' => 'string',
        'gender' => '\Membercare\Client\Model\Gender',
        'birth_date' => '\DateTime',
        'age' => 'int',
        'lastname' => 'string',
        'name_history' => '\Membercare\Client\Model\PersonNameHistory[]',
        'honorific' => 'string',
        'custom_field_values_link' => 'string',
        'memberships_link' => 'string',
        'boardmemberships_link' => 'string',
        'password' => 'string',
        'web_user_id' => 'string',
        'social_security_number' => '\Membercare\Client\Model\SocialSecurityNumber',
        'internal_user_info' => '\Membercare\Client\Model\InternalUserInfo',
        'external_system_info' => '\Membercare\Client\Model\ExternalSystemInfo',
        'login_token' => '\Membercare\Client\Model\Token',
        'allow_sms' => 'bool',
        'allow_email' => 'bool',
        'union_representatives' => '\Membercare\Client\Model\UnionRepresentative[]',
        'union_groups' => '\Membercare\Client\Model\UnionGroup[]',
        'employments' => '\Membercare\Client\Model\Employment[]',
        'memberships' => '\Membercare\Client\Model\Membership[]',
        'board_memberships' => '\Membercare\Client\Model\BoardMembership[]',
        'identity' => '\Membercare\Client\Model\Identity',
        'anonymized_on' => '\DateTime',
        'text' => 'string',
        'consents' => '\Membercare\Client\Model\Consent[]',
        'accepted_terms' => '\Membercare\Client\Model\Terms',
        'foreign_system_mappings' => '\Membercare\Client\Model\ForeignSystemMapping[]',
        'preferred_address' => '\Membercare\Client\Model\AddressRule',
        'preferred_contact' => '\Membercare\Client\Model\SecretContactPriority',
        'salary_system_identification' => 'string',
        'temporary' => 'bool',
        'interests' => '\Membercare\Client\Model\Interest[]',
        'bank_registration_number' => 'string',
        'bank_account_number' => 'string',
        'profile_picture_identification' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'url' => null,
        'debtor_account_number' => null,
        'name' => null,
        'contacts' => null,
        'addresses' => null,
        'custom_field_values' => null,
        'invoices_link' => null,
        'member_type' => null,
        'default_payer_link' => null,
        'dafualt_payer_rule' => null,
        'close_date' => 'date-time',
        'einvoice_ean' => null,
        'einvoice_email' => null,
        'close_reason' => null,
        'default_address_type' => null,
        'external_id' => null,
        'last_change' => 'date-time',
        'finance_type' => null,
        'relations_link' => null,
        'firstname' => null,
        'gender' => null,
        'birth_date' => 'date-time',
        'age' => 'int32',
        'lastname' => null,
        'name_history' => null,
        'honorific' => null,
        'custom_field_values_link' => null,
        'memberships_link' => null,
        'boardmemberships_link' => null,
        'password' => null,
        'web_user_id' => null,
        'social_security_number' => null,
        'internal_user_info' => null,
        'external_system_info' => null,
        'login_token' => null,
        'allow_sms' => null,
        'allow_email' => null,
        'union_representatives' => null,
        'union_groups' => null,
        'employments' => null,
        'memberships' => null,
        'board_memberships' => null,
        'identity' => null,
        'anonymized_on' => 'date-time',
        'text' => null,
        'consents' => null,
        'accepted_terms' => null,
        'foreign_system_mappings' => null,
        'preferred_address' => null,
        'preferred_contact' => null,
        'salary_system_identification' => null,
        'temporary' => null,
        'interests' => null,
        'bank_registration_number' => null,
        'bank_account_number' => null,
        'profile_picture_identification' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'url' => 'url',
        'debtor_account_number' => 'debtorAccountNumber',
        'name' => 'name',
        'contacts' => 'contacts',
        'addresses' => 'addresses',
        'custom_field_values' => 'customFieldValues',
        'invoices_link' => 'invoicesLink',
        'member_type' => 'memberType',
        'default_payer_link' => 'defaultPayerLink',
        'dafualt_payer_rule' => 'dafualtPayerRule',
        'close_date' => 'closeDate',
        'einvoice_ean' => 'einvoiceEan',
        'einvoice_email' => 'einvoiceEmail',
        'close_reason' => 'closeReason',
        'default_address_type' => 'defaultAddressType',
        'external_id' => 'externalId',
        'last_change' => 'lastChange',
        'finance_type' => 'financeType',
        'relations_link' => 'relationsLink',
        'firstname' => 'firstname',
        'gender' => 'gender',
        'birth_date' => 'birthDate',
        'age' => 'age',
        'lastname' => 'lastname',
        'name_history' => 'nameHistory',
        'honorific' => 'honorific',
        'custom_field_values_link' => 'customFieldValuesLink',
        'memberships_link' => 'membershipsLink',
        'boardmemberships_link' => 'boardmembershipsLink',
        'password' => 'password',
        'web_user_id' => 'webUserId',
        'social_security_number' => 'socialSecurityNumber',
        'internal_user_info' => 'internalUserInfo',
        'external_system_info' => 'externalSystemInfo',
        'login_token' => 'loginToken',
        'allow_sms' => 'allowSms',
        'allow_email' => 'allowEmail',
        'union_representatives' => 'unionRepresentatives',
        'union_groups' => 'unionGroups',
        'employments' => 'employments',
        'memberships' => 'memberships',
        'board_memberships' => 'boardMemberships',
        'identity' => 'identity',
        'anonymized_on' => 'anonymizedOn',
        'text' => 'text',
        'consents' => 'consents',
        'accepted_terms' => 'acceptedTerms',
        'foreign_system_mappings' => 'foreignSystemMappings',
        'preferred_address' => 'preferredAddress',
        'preferred_contact' => 'preferredContact',
        'salary_system_identification' => 'salarySystemIdentification',
        'temporary' => 'temporary',
        'interests' => 'interests',
        'bank_registration_number' => 'bankRegistrationNumber',
        'bank_account_number' => 'bankAccountNumber',
        'profile_picture_identification' => 'profilePictureIdentification'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'url' => 'setUrl',
        'debtor_account_number' => 'setDebtorAccountNumber',
        'name' => 'setName',
        'contacts' => 'setContacts',
        'addresses' => 'setAddresses',
        'custom_field_values' => 'setCustomFieldValues',
        'invoices_link' => 'setInvoicesLink',
        'member_type' => 'setMemberType',
        'default_payer_link' => 'setDefaultPayerLink',
        'dafualt_payer_rule' => 'setDafualtPayerRule',
        'close_date' => 'setCloseDate',
        'einvoice_ean' => 'setEinvoiceEan',
        'einvoice_email' => 'setEinvoiceEmail',
        'close_reason' => 'setCloseReason',
        'default_address_type' => 'setDefaultAddressType',
        'external_id' => 'setExternalId',
        'last_change' => 'setLastChange',
        'finance_type' => 'setFinanceType',
        'relations_link' => 'setRelationsLink',
        'firstname' => 'setFirstname',
        'gender' => 'setGender',
        'birth_date' => 'setBirthDate',
        'age' => 'setAge',
        'lastname' => 'setLastname',
        'name_history' => 'setNameHistory',
        'honorific' => 'setHonorific',
        'custom_field_values_link' => 'setCustomFieldValuesLink',
        'memberships_link' => 'setMembershipsLink',
        'boardmemberships_link' => 'setBoardmembershipsLink',
        'password' => 'setPassword',
        'web_user_id' => 'setWebUserId',
        'social_security_number' => 'setSocialSecurityNumber',
        'internal_user_info' => 'setInternalUserInfo',
        'external_system_info' => 'setExternalSystemInfo',
        'login_token' => 'setLoginToken',
        'allow_sms' => 'setAllowSms',
        'allow_email' => 'setAllowEmail',
        'union_representatives' => 'setUnionRepresentatives',
        'union_groups' => 'setUnionGroups',
        'employments' => 'setEmployments',
        'memberships' => 'setMemberships',
        'board_memberships' => 'setBoardMemberships',
        'identity' => 'setIdentity',
        'anonymized_on' => 'setAnonymizedOn',
        'text' => 'setText',
        'consents' => 'setConsents',
        'accepted_terms' => 'setAcceptedTerms',
        'foreign_system_mappings' => 'setForeignSystemMappings',
        'preferred_address' => 'setPreferredAddress',
        'preferred_contact' => 'setPreferredContact',
        'salary_system_identification' => 'setSalarySystemIdentification',
        'temporary' => 'setTemporary',
        'interests' => 'setInterests',
        'bank_registration_number' => 'setBankRegistrationNumber',
        'bank_account_number' => 'setBankAccountNumber',
        'profile_picture_identification' => 'setProfilePictureIdentification'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'url' => 'getUrl',
        'debtor_account_number' => 'getDebtorAccountNumber',
        'name' => 'getName',
        'contacts' => 'getContacts',
        'addresses' => 'getAddresses',
        'custom_field_values' => 'getCustomFieldValues',
        'invoices_link' => 'getInvoicesLink',
        'member_type' => 'getMemberType',
        'default_payer_link' => 'getDefaultPayerLink',
        'dafualt_payer_rule' => 'getDafualtPayerRule',
        'close_date' => 'getCloseDate',
        'einvoice_ean' => 'getEinvoiceEan',
        'einvoice_email' => 'getEinvoiceEmail',
        'close_reason' => 'getCloseReason',
        'default_address_type' => 'getDefaultAddressType',
        'external_id' => 'getExternalId',
        'last_change' => 'getLastChange',
        'finance_type' => 'getFinanceType',
        'relations_link' => 'getRelationsLink',
        'firstname' => 'getFirstname',
        'gender' => 'getGender',
        'birth_date' => 'getBirthDate',
        'age' => 'getAge',
        'lastname' => 'getLastname',
        'name_history' => 'getNameHistory',
        'honorific' => 'getHonorific',
        'custom_field_values_link' => 'getCustomFieldValuesLink',
        'memberships_link' => 'getMembershipsLink',
        'boardmemberships_link' => 'getBoardmembershipsLink',
        'password' => 'getPassword',
        'web_user_id' => 'getWebUserId',
        'social_security_number' => 'getSocialSecurityNumber',
        'internal_user_info' => 'getInternalUserInfo',
        'external_system_info' => 'getExternalSystemInfo',
        'login_token' => 'getLoginToken',
        'allow_sms' => 'getAllowSms',
        'allow_email' => 'getAllowEmail',
        'union_representatives' => 'getUnionRepresentatives',
        'union_groups' => 'getUnionGroups',
        'employments' => 'getEmployments',
        'memberships' => 'getMemberships',
        'board_memberships' => 'getBoardMemberships',
        'identity' => 'getIdentity',
        'anonymized_on' => 'getAnonymizedOn',
        'text' => 'getText',
        'consents' => 'getConsents',
        'accepted_terms' => 'getAcceptedTerms',
        'foreign_system_mappings' => 'getForeignSystemMappings',
        'preferred_address' => 'getPreferredAddress',
        'preferred_contact' => 'getPreferredContact',
        'salary_system_identification' => 'getSalarySystemIdentification',
        'temporary' => 'getTemporary',
        'interests' => 'getInterests',
        'bank_registration_number' => 'getBankRegistrationNumber',
        'bank_account_number' => 'getBankAccountNumber',
        'profile_picture_identification' => 'getProfilePictureIdentification'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['url'] = isset($data['url']) ? $data['url'] : null;
        $this->container['debtor_account_number'] = isset($data['debtor_account_number']) ? $data['debtor_account_number'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['contacts'] = isset($data['contacts']) ? $data['contacts'] : null;
        $this->container['addresses'] = isset($data['addresses']) ? $data['addresses'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
        $this->container['invoices_link'] = isset($data['invoices_link']) ? $data['invoices_link'] : null;
        $this->container['member_type'] = isset($data['member_type']) ? $data['member_type'] : null;
        $this->container['default_payer_link'] = isset($data['default_payer_link']) ? $data['default_payer_link'] : null;
        $this->container['dafualt_payer_rule'] = isset($data['dafualt_payer_rule']) ? $data['dafualt_payer_rule'] : null;
        $this->container['close_date'] = isset($data['close_date']) ? $data['close_date'] : null;
        $this->container['einvoice_ean'] = isset($data['einvoice_ean']) ? $data['einvoice_ean'] : null;
        $this->container['einvoice_email'] = isset($data['einvoice_email']) ? $data['einvoice_email'] : null;
        $this->container['close_reason'] = isset($data['close_reason']) ? $data['close_reason'] : null;
        $this->container['default_address_type'] = isset($data['default_address_type']) ? $data['default_address_type'] : null;
        $this->container['external_id'] = isset($data['external_id']) ? $data['external_id'] : null;
        $this->container['last_change'] = isset($data['last_change']) ? $data['last_change'] : null;
        $this->container['finance_type'] = isset($data['finance_type']) ? $data['finance_type'] : null;
        $this->container['relations_link'] = isset($data['relations_link']) ? $data['relations_link'] : null;
        $this->container['firstname'] = isset($data['firstname']) ? $data['firstname'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['birth_date'] = isset($data['birth_date']) ? $data['birth_date'] : null;
        $this->container['age'] = isset($data['age']) ? $data['age'] : null;
        $this->container['lastname'] = isset($data['lastname']) ? $data['lastname'] : null;
        $this->container['name_history'] = isset($data['name_history']) ? $data['name_history'] : null;
        $this->container['honorific'] = isset($data['honorific']) ? $data['honorific'] : null;
        $this->container['custom_field_values_link'] = isset($data['custom_field_values_link']) ? $data['custom_field_values_link'] : null;
        $this->container['memberships_link'] = isset($data['memberships_link']) ? $data['memberships_link'] : null;
        $this->container['boardmemberships_link'] = isset($data['boardmemberships_link']) ? $data['boardmemberships_link'] : null;
        $this->container['password'] = isset($data['password']) ? $data['password'] : null;
        $this->container['web_user_id'] = isset($data['web_user_id']) ? $data['web_user_id'] : null;
        $this->container['social_security_number'] = isset($data['social_security_number']) ? $data['social_security_number'] : null;
        $this->container['internal_user_info'] = isset($data['internal_user_info']) ? $data['internal_user_info'] : null;
        $this->container['external_system_info'] = isset($data['external_system_info']) ? $data['external_system_info'] : null;
        $this->container['login_token'] = isset($data['login_token']) ? $data['login_token'] : null;
        $this->container['allow_sms'] = isset($data['allow_sms']) ? $data['allow_sms'] : null;
        $this->container['allow_email'] = isset($data['allow_email']) ? $data['allow_email'] : null;
        $this->container['union_representatives'] = isset($data['union_representatives']) ? $data['union_representatives'] : null;
        $this->container['union_groups'] = isset($data['union_groups']) ? $data['union_groups'] : null;
        $this->container['employments'] = isset($data['employments']) ? $data['employments'] : null;
        $this->container['memberships'] = isset($data['memberships']) ? $data['memberships'] : null;
        $this->container['board_memberships'] = isset($data['board_memberships']) ? $data['board_memberships'] : null;
        $this->container['identity'] = isset($data['identity']) ? $data['identity'] : null;
        $this->container['anonymized_on'] = isset($data['anonymized_on']) ? $data['anonymized_on'] : null;
        $this->container['text'] = isset($data['text']) ? $data['text'] : null;
        $this->container['consents'] = isset($data['consents']) ? $data['consents'] : null;
        $this->container['accepted_terms'] = isset($data['accepted_terms']) ? $data['accepted_terms'] : null;
        $this->container['foreign_system_mappings'] = isset($data['foreign_system_mappings']) ? $data['foreign_system_mappings'] : null;
        $this->container['preferred_address'] = isset($data['preferred_address']) ? $data['preferred_address'] : null;
        $this->container['preferred_contact'] = isset($data['preferred_contact']) ? $data['preferred_contact'] : null;
        $this->container['salary_system_identification'] = isset($data['salary_system_identification']) ? $data['salary_system_identification'] : null;
        $this->container['temporary'] = isset($data['temporary']) ? $data['temporary'] : null;
        $this->container['interests'] = isset($data['interests']) ? $data['interests'] : null;
        $this->container['bank_registration_number'] = isset($data['bank_registration_number']) ? $data['bank_registration_number'] : null;
        $this->container['bank_account_number'] = isset($data['bank_account_number']) ? $data['bank_account_number'] : null;
        $this->container['profile_picture_identification'] = isset($data['profile_picture_identification']) ? $data['profile_picture_identification'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets url
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string $url The link to the current resource
     *
     * @return $this
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets debtor_account_number
     *
     * @return string
     */
    public function getDebtorAccountNumber()
    {
        return $this->container['debtor_account_number'];
    }

    /**
     * Sets debtor_account_number
     *
     * @param string $debtor_account_number The identifying number
     *
     * @return $this
     */
    public function setDebtorAccountNumber($debtor_account_number)
    {
        $this->container['debtor_account_number'] = $debtor_account_number;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name The full name of the member
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets contacts
     *
     * @return \Membercare\Client\Model\Contact[]
     */
    public function getContacts()
    {
        return $this->container['contacts'];
    }

    /**
     * Sets contacts
     *
     * @param \Membercare\Client\Model\Contact[] $contacts List of contact informations of the member
     *
     * @return $this
     */
    public function setContacts($contacts)
    {
        $this->container['contacts'] = $contacts;

        return $this;
    }

    /**
     * Gets addresses
     *
     * @return \Membercare\Client\Model\PostalAddress[]
     */
    public function getAddresses()
    {
        return $this->container['addresses'];
    }

    /**
     * Sets addresses
     *
     * @param \Membercare\Client\Model\PostalAddress[] $addresses List of address information of the member (primary and secundary addresses only)
     *
     * @return $this
     */
    public function setAddresses($addresses)
    {
        $this->container['addresses'] = $addresses;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Membercare\Client\Model\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Membercare\Client\Model\CustomFieldValue[] $custom_field_values The members CustomFieldValues
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }

    /**
     * Gets invoices_link
     *
     * @return string
     */
    public function getInvoicesLink()
    {
        return $this->container['invoices_link'];
    }

    /**
     * Sets invoices_link
     *
     * @param string $invoices_link Url to the collection of the member Invoices
     *
     * @return $this
     */
    public function setInvoicesLink($invoices_link)
    {
        $this->container['invoices_link'] = $invoices_link;

        return $this;
    }

    /**
     * Gets member_type
     *
     * @return \Membercare\Client\Model\UnitType
     */
    public function getMemberType()
    {
        return $this->container['member_type'];
    }

    /**
     * Sets member_type
     *
     * @param \Membercare\Client\Model\UnitType $member_type member_type
     *
     * @return $this
     */
    public function setMemberType($member_type)
    {
        $this->container['member_type'] = $member_type;

        return $this;
    }

    /**
     * Gets default_payer_link
     *
     * @return string
     */
    public function getDefaultPayerLink()
    {
        return $this->container['default_payer_link'];
    }

    /**
     * Sets default_payer_link
     *
     * @param string $default_payer_link Link to the default payer for the member.
     *
     * @return $this
     */
    public function setDefaultPayerLink($default_payer_link)
    {
        $this->container['default_payer_link'] = $default_payer_link;

        return $this;
    }

    /**
     * Gets dafualt_payer_rule
     *
     * @return \Membercare\Client\Model\PayerRule
     */
    public function getDafualtPayerRule()
    {
        return $this->container['dafualt_payer_rule'];
    }

    /**
     * Sets dafualt_payer_rule
     *
     * @param \Membercare\Client\Model\PayerRule $dafualt_payer_rule dafualt_payer_rule
     *
     * @return $this
     */
    public function setDafualtPayerRule($dafualt_payer_rule)
    {
        $this->container['dafualt_payer_rule'] = $dafualt_payer_rule;

        return $this;
    }

    /**
     * Gets close_date
     *
     * @return \DateTime
     */
    public function getCloseDate()
    {
        return $this->container['close_date'];
    }

    /**
     * Sets close_date
     *
     * @param \DateTime $close_date The day the unit was closed.  Value is ignored when creating or updating!
     *
     * @return $this
     */
    public function setCloseDate($close_date)
    {
        $this->container['close_date'] = $close_date;

        return $this;
    }

    /**
     * Gets einvoice_ean
     *
     * @return string
     */
    public function getEinvoiceEan()
    {
        return $this->container['einvoice_ean'];
    }

    /**
     * Sets einvoice_ean
     *
     * @param string $einvoice_ean Ean for electronic invoicing
     *
     * @return $this
     */
    public function setEinvoiceEan($einvoice_ean)
    {
        $this->container['einvoice_ean'] = $einvoice_ean;

        return $this;
    }

    /**
     * Gets einvoice_email
     *
     * @return string
     */
    public function getEinvoiceEmail()
    {
        return $this->container['einvoice_email'];
    }

    /**
     * Sets einvoice_email
     *
     * @param string $einvoice_email Email for electronic invoicing
     *
     * @return $this
     */
    public function setEinvoiceEmail($einvoice_email)
    {
        $this->container['einvoice_email'] = $einvoice_email;

        return $this;
    }

    /**
     * Gets close_reason
     *
     * @return \Membercare\Client\Model\CloseReason
     */
    public function getCloseReason()
    {
        return $this->container['close_reason'];
    }

    /**
     * Sets close_reason
     *
     * @param \Membercare\Client\Model\CloseReason $close_reason close_reason
     *
     * @return $this
     */
    public function setCloseReason($close_reason)
    {
        $this->container['close_reason'] = $close_reason;

        return $this;
    }

    /**
     * Gets default_address_type
     *
     * @return \Membercare\Client\Model\AddressRule
     */
    public function getDefaultAddressType()
    {
        return $this->container['default_address_type'];
    }

    /**
     * Sets default_address_type
     *
     * @param \Membercare\Client\Model\AddressRule $default_address_type default_address_type
     *
     * @return $this
     */
    public function setDefaultAddressType($default_address_type)
    {
        $this->container['default_address_type'] = $default_address_type;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string $external_id Id that comes from an external source to identify a member that exists both in Membercare and in another system
     *
     * @return $this
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets last_change
     *
     * @return \DateTime
     */
    public function getLastChange()
    {
        return $this->container['last_change'];
    }

    /**
     * Sets last_change
     *
     * @param \DateTime $last_change When was the base entity last changed
     *
     * @return $this
     */
    public function setLastChange($last_change)
    {
        $this->container['last_change'] = $last_change;

        return $this;
    }

    /**
     * Gets finance_type
     *
     * @return \Membercare\Client\Model\FinanceType
     */
    public function getFinanceType()
    {
        return $this->container['finance_type'];
    }

    /**
     * Sets finance_type
     *
     * @param \Membercare\Client\Model\FinanceType $finance_type finance_type
     *
     * @return $this
     */
    public function setFinanceType($finance_type)
    {
        $this->container['finance_type'] = $finance_type;

        return $this;
    }

    /**
     * Gets relations_link
     *
     * @return string
     */
    public function getRelationsLink()
    {
        return $this->container['relations_link'];
    }

    /**
     * Sets relations_link
     *
     * @param string $relations_link Url to the collection of the persons Relations
     *
     * @return $this
     */
    public function setRelationsLink($relations_link)
    {
        $this->container['relations_link'] = $relations_link;

        return $this;
    }

    /**
     * Gets firstname
     *
     * @return string
     */
    public function getFirstname()
    {
        return $this->container['firstname'];
    }

    /**
     * Sets firstname
     *
     * @param string $firstname The first name of the person
     *
     * @return $this
     */
    public function setFirstname($firstname)
    {
        $this->container['firstname'] = $firstname;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return \Membercare\Client\Model\Gender
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param \Membercare\Client\Model\Gender $gender gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets birth_date
     *
     * @return \DateTime
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     *
     * @param \DateTime $birth_date A of the persons date of birth.
     *
     * @return $this
     */
    public function setBirthDate($birth_date)
    {
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets age
     *
     * @return int
     */
    public function getAge()
    {
        return $this->container['age'];
    }

    /**
     * Sets age
     *
     * @param int $age Age of the person
     *
     * @return $this
     */
    public function setAge($age)
    {
        $this->container['age'] = $age;

        return $this;
    }

    /**
     * Gets lastname
     *
     * @return string
     */
    public function getLastname()
    {
        return $this->container['lastname'];
    }

    /**
     * Sets lastname
     *
     * @param string $lastname The surname of the person
     *
     * @return $this
     */
    public function setLastname($lastname)
    {
        $this->container['lastname'] = $lastname;

        return $this;
    }

    /**
     * Gets name_history
     *
     * @return \Membercare\Client\Model\PersonNameHistory[]
     */
    public function getNameHistory()
    {
        return $this->container['name_history'];
    }

    /**
     * Sets name_history
     *
     * @param \Membercare\Client\Model\PersonNameHistory[] $name_history If loaded this will show name changes
     *
     * @return $this
     */
    public function setNameHistory($name_history)
    {
        $this->container['name_history'] = $name_history;

        return $this;
    }

    /**
     * Gets honorific
     *
     * @return string
     */
    public function getHonorific()
    {
        return $this->container['honorific'];
    }

    /**
     * Sets honorific
     *
     * @param string $honorific The persons honorific
     *
     * @return $this
     */
    public function setHonorific($honorific)
    {
        $this->container['honorific'] = $honorific;

        return $this;
    }

    /**
     * Gets custom_field_values_link
     *
     * @return string
     */
    public function getCustomFieldValuesLink()
    {
        return $this->container['custom_field_values_link'];
    }

    /**
     * Sets custom_field_values_link
     *
     * @param string $custom_field_values_link Url to the collection of the persons CustomFieldValues
     *
     * @return $this
     */
    public function setCustomFieldValuesLink($custom_field_values_link)
    {
        $this->container['custom_field_values_link'] = $custom_field_values_link;

        return $this;
    }

    /**
     * Gets memberships_link
     *
     * @return string
     */
    public function getMembershipsLink()
    {
        return $this->container['memberships_link'];
    }

    /**
     * Sets memberships_link
     *
     * @param string $memberships_link Url to the collection of the persons Memberships
     *
     * @return $this
     */
    public function setMembershipsLink($memberships_link)
    {
        $this->container['memberships_link'] = $memberships_link;

        return $this;
    }

    /**
     * Gets boardmemberships_link
     *
     * @return string
     */
    public function getBoardmembershipsLink()
    {
        return $this->container['boardmemberships_link'];
    }

    /**
     * Sets boardmemberships_link
     *
     * @param string $boardmemberships_link Url to the collection of the persons Boardmemberships
     *
     * @return $this
     */
    public function setBoardmembershipsLink($boardmemberships_link)
    {
        $this->container['boardmemberships_link'] = $boardmemberships_link;

        return $this;
    }

    /**
     * Gets password
     *
     * @return string
     */
    public function getPassword()
    {
        return $this->container['password'];
    }

    /**
     * Sets password
     *
     * @param string $password The persons password
     *
     * @return $this
     */
    public function setPassword($password)
    {
        $this->container['password'] = $password;

        return $this;
    }

    /**
     * Gets web_user_id
     *
     * @return string
     */
    public function getWebUserId()
    {
        return $this->container['web_user_id'];
    }

    /**
     * Sets web_user_id
     *
     * @param string $web_user_id The persons webuserid (username)  In Membercare administration it is possible to set up how users log in (debtoraccountNumber, Email or WebUserId)
     *
     * @return $this
     */
    public function setWebUserId($web_user_id)
    {
        $this->container['web_user_id'] = $web_user_id;

        return $this;
    }

    /**
     * Gets social_security_number
     *
     * @return \Membercare\Client\Model\SocialSecurityNumber
     */
    public function getSocialSecurityNumber()
    {
        return $this->container['social_security_number'];
    }

    /**
     * Sets social_security_number
     *
     * @param \Membercare\Client\Model\SocialSecurityNumber $social_security_number social_security_number
     *
     * @return $this
     */
    public function setSocialSecurityNumber($social_security_number)
    {
        $this->container['social_security_number'] = $social_security_number;

        return $this;
    }

    /**
     * Gets internal_user_info
     *
     * @return \Membercare\Client\Model\InternalUserInfo
     */
    public function getInternalUserInfo()
    {
        return $this->container['internal_user_info'];
    }

    /**
     * Sets internal_user_info
     *
     * @param \Membercare\Client\Model\InternalUserInfo $internal_user_info internal_user_info
     *
     * @return $this
     */
    public function setInternalUserInfo($internal_user_info)
    {
        $this->container['internal_user_info'] = $internal_user_info;

        return $this;
    }

    /**
     * Gets external_system_info
     *
     * @return \Membercare\Client\Model\ExternalSystemInfo
     */
    public function getExternalSystemInfo()
    {
        return $this->container['external_system_info'];
    }

    /**
     * Sets external_system_info
     *
     * @param \Membercare\Client\Model\ExternalSystemInfo $external_system_info external_system_info
     *
     * @return $this
     */
    public function setExternalSystemInfo($external_system_info)
    {
        $this->container['external_system_info'] = $external_system_info;

        return $this;
    }

    /**
     * Gets login_token
     *
     * @return \Membercare\Client\Model\Token
     */
    public function getLoginToken()
    {
        return $this->container['login_token'];
    }

    /**
     * Sets login_token
     *
     * @param \Membercare\Client\Model\Token $login_token login_token
     *
     * @return $this
     */
    public function setLoginToken($login_token)
    {
        $this->container['login_token'] = $login_token;

        return $this;
    }

    /**
     * Gets allow_sms
     *
     * @return bool
     */
    public function getAllowSms()
    {
        return $this->container['allow_sms'];
    }

    /**
     * Sets allow_sms
     *
     * @param bool $allow_sms To tell wether or not the member allows being sent sms'es
     *
     * @return $this
     */
    public function setAllowSms($allow_sms)
    {
        $this->container['allow_sms'] = $allow_sms;

        return $this;
    }

    /**
     * Gets allow_email
     *
     * @return bool
     */
    public function getAllowEmail()
    {
        return $this->container['allow_email'];
    }

    /**
     * Sets allow_email
     *
     * @param bool $allow_email To tell wether or not the member allows being sent e-mails
     *
     * @return $this
     */
    public function setAllowEmail($allow_email)
    {
        $this->container['allow_email'] = $allow_email;

        return $this;
    }

    /**
     * Gets union_representatives
     *
     * @return \Membercare\Client\Model\UnionRepresentative[]
     */
    public function getUnionRepresentatives()
    {
        return $this->container['union_representatives'];
    }

    /**
     * Sets union_representatives
     *
     * @param \Membercare\Client\Model\UnionRepresentative[] $union_representatives UnionRepresentatives (this person have been trusted to have these roles)
     *
     * @return $this
     */
    public function setUnionRepresentatives($union_representatives)
    {
        $this->container['union_representatives'] = $union_representatives;

        return $this;
    }

    /**
     * Gets union_groups
     *
     * @return \Membercare\Client\Model\UnionGroup[]
     */
    public function getUnionGroups()
    {
        return $this->container['union_groups'];
    }

    /**
     * Sets union_groups
     *
     * @param \Membercare\Client\Model\UnionGroup[] $union_groups Union Groups (clubs)
     *
     * @return $this
     */
    public function setUnionGroups($union_groups)
    {
        $this->container['union_groups'] = $union_groups;

        return $this;
    }

    /**
     * Gets employments
     *
     * @return \Membercare\Client\Model\Employment[]
     */
    public function getEmployments()
    {
        return $this->container['employments'];
    }

    /**
     * Sets employments
     *
     * @param \Membercare\Client\Model\Employment[] $employments Employments
     *
     * @return $this
     */
    public function setEmployments($employments)
    {
        $this->container['employments'] = $employments;

        return $this;
    }

    /**
     * Gets memberships
     *
     * @return \Membercare\Client\Model\Membership[]
     */
    public function getMemberships()
    {
        return $this->container['memberships'];
    }

    /**
     * Sets memberships
     *
     * @param \Membercare\Client\Model\Membership[] $memberships Memberships
     *
     * @return $this
     */
    public function setMemberships($memberships)
    {
        $this->container['memberships'] = $memberships;

        return $this;
    }

    /**
     * Gets board_memberships
     *
     * @return \Membercare\Client\Model\BoardMembership[]
     */
    public function getBoardMemberships()
    {
        return $this->container['board_memberships'];
    }

    /**
     * Sets board_memberships
     *
     * @param \Membercare\Client\Model\BoardMembership[] $board_memberships BoardMemberships
     *
     * @return $this
     */
    public function setBoardMemberships($board_memberships)
    {
        $this->container['board_memberships'] = $board_memberships;

        return $this;
    }

    /**
     * Gets identity
     *
     * @return \Membercare\Client\Model\Identity
     */
    public function getIdentity()
    {
        return $this->container['identity'];
    }

    /**
     * Sets identity
     *
     * @param \Membercare\Client\Model\Identity $identity identity
     *
     * @return $this
     */
    public function setIdentity($identity)
    {
        $this->container['identity'] = $identity;

        return $this;
    }

    /**
     * Gets anonymized_on
     *
     * @return \DateTime
     */
    public function getAnonymizedOn()
    {
        return $this->container['anonymized_on'];
    }

    /**
     * Sets anonymized_on
     *
     * @param \DateTime $anonymized_on The date when the person was anonymized
     *
     * @return $this
     */
    public function setAnonymizedOn($anonymized_on)
    {
        $this->container['anonymized_on'] = $anonymized_on;

        return $this;
    }

    /**
     * Gets text
     *
     * @return string
     */
    public function getText()
    {
        return $this->container['text'];
    }

    /**
     * Sets text
     *
     * @param string $text Profile text
     *
     * @return $this
     */
    public function setText($text)
    {
        $this->container['text'] = $text;

        return $this;
    }

    /**
     * Gets consents
     *
     * @return \Membercare\Client\Model\Consent[]
     */
    public function getConsents()
    {
        return $this->container['consents'];
    }

    /**
     * Sets consents
     *
     * @param \Membercare\Client\Model\Consent[] $consents The accepted ConsentDeclaration by the Person
     *
     * @return $this
     */
    public function setConsents($consents)
    {
        $this->container['consents'] = $consents;

        return $this;
    }

    /**
     * Gets accepted_terms
     *
     * @return \Membercare\Client\Model\Terms
     */
    public function getAcceptedTerms()
    {
        return $this->container['accepted_terms'];
    }

    /**
     * Sets accepted_terms
     *
     * @param \Membercare\Client\Model\Terms $accepted_terms accepted_terms
     *
     * @return $this
     */
    public function setAcceptedTerms($accepted_terms)
    {
        $this->container['accepted_terms'] = $accepted_terms;

        return $this;
    }

    /**
     * Gets foreign_system_mappings
     *
     * @return \Membercare\Client\Model\ForeignSystemMapping[]
     */
    public function getForeignSystemMappings()
    {
        return $this->container['foreign_system_mappings'];
    }

    /**
     * Sets foreign_system_mappings
     *
     * @param \Membercare\Client\Model\ForeignSystemMapping[] $foreign_system_mappings Foreign Systems
     *
     * @return $this
     */
    public function setForeignSystemMappings($foreign_system_mappings)
    {
        $this->container['foreign_system_mappings'] = $foreign_system_mappings;

        return $this;
    }

    /**
     * Gets preferred_address
     *
     * @return \Membercare\Client\Model\AddressRule
     */
    public function getPreferredAddress()
    {
        return $this->container['preferred_address'];
    }

    /**
     * Sets preferred_address
     *
     * @param \Membercare\Client\Model\AddressRule $preferred_address preferred_address
     *
     * @return $this
     */
    public function setPreferredAddress($preferred_address)
    {
        $this->container['preferred_address'] = $preferred_address;

        return $this;
    }

    /**
     * Gets preferred_contact
     *
     * @return \Membercare\Client\Model\SecretContactPriority
     */
    public function getPreferredContact()
    {
        return $this->container['preferred_contact'];
    }

    /**
     * Sets preferred_contact
     *
     * @param \Membercare\Client\Model\SecretContactPriority $preferred_contact preferred_contact
     *
     * @return $this
     */
    public function setPreferredContact($preferred_contact)
    {
        $this->container['preferred_contact'] = $preferred_contact;

        return $this;
    }

    /**
     * Gets salary_system_identification
     *
     * @return string
     */
    public function getSalarySystemIdentification()
    {
        return $this->container['salary_system_identification'];
    }

    /**
     * Sets salary_system_identification
     *
     * @param string $salary_system_identification Salary System Identification
     *
     * @return $this
     */
    public function setSalarySystemIdentification($salary_system_identification)
    {
        $this->container['salary_system_identification'] = $salary_system_identification;

        return $this;
    }

    /**
     * Gets temporary
     *
     * @return bool
     */
    public function getTemporary()
    {
        return $this->container['temporary'];
    }

    /**
     * Sets temporary
     *
     * @param bool $temporary Person marked as temporary
     *
     * @return $this
     */
    public function setTemporary($temporary)
    {
        $this->container['temporary'] = $temporary;

        return $this;
    }

    /**
     * Gets interests
     *
     * @return \Membercare\Client\Model\Interest[]
     */
    public function getInterests()
    {
        return $this->container['interests'];
    }

    /**
     * Sets interests
     *
     * @param \Membercare\Client\Model\Interest[] $interests Interests of a person
     *
     * @return $this
     */
    public function setInterests($interests)
    {
        $this->container['interests'] = $interests;

        return $this;
    }

    /**
     * Gets bank_registration_number
     *
     * @return string
     */
    public function getBankRegistrationNumber()
    {
        return $this->container['bank_registration_number'];
    }

    /**
     * Sets bank_registration_number
     *
     * @param string $bank_registration_number Bank account registrationnumber
     *
     * @return $this
     */
    public function setBankRegistrationNumber($bank_registration_number)
    {
        $this->container['bank_registration_number'] = $bank_registration_number;

        return $this;
    }

    /**
     * Gets bank_account_number
     *
     * @return string
     */
    public function getBankAccountNumber()
    {
        return $this->container['bank_account_number'];
    }

    /**
     * Sets bank_account_number
     *
     * @param string $bank_account_number Bank account number
     *
     * @return $this
     */
    public function setBankAccountNumber($bank_account_number)
    {
        $this->container['bank_account_number'] = $bank_account_number;

        return $this;
    }

    /**
     * Gets profile_picture_identification
     *
     * @return string
     */
    public function getProfilePictureIdentification()
    {
        return $this->container['profile_picture_identification'];
    }

    /**
     * Sets profile_picture_identification
     *
     * @param string $profile_picture_identification The identification of the profile picture
     *
     * @return $this
     */
    public function setProfilePictureIdentification($profile_picture_identification)
    {
        $this->container['profile_picture_identification'] = $profile_picture_identification;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
