<?php
/**
 * Company
 *
 * PHP version 5
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Membercare API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@membercare.dk
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Membercare\Client\Model;

use \ArrayAccess;
use \Membercare\Client\ObjectSerializer;

/**
 * Company Class Doc Comment
 *
 * @category Class
 * @description Representation of a Company
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Company implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Company';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'url' => 'string',
        'debtor_account_number' => 'string',
        'name' => 'string',
        'contacts' => '\Membercare\Client\Model\Contact[]',
        'addresses' => '\Membercare\Client\Model\PostalAddress[]',
        'custom_field_values' => '\Membercare\Client\Model\CustomFieldValue[]',
        'invoices_link' => 'string',
        'member_type' => '\Membercare\Client\Model\UnitType',
        'default_payer_link' => 'string',
        'dafualt_payer_rule' => '\Membercare\Client\Model\PayerRule',
        'close_date' => '\DateTime',
        'einvoice_ean' => 'string',
        'einvoice_email' => 'string',
        'close_reason' => '\Membercare\Client\Model\CloseReason',
        'default_address_type' => '\Membercare\Client\Model\AddressRule',
        'external_id' => 'string',
        'last_change' => '\DateTime',
        'finance_type' => '\Membercare\Client\Model\FinanceType',
        'id' => 'int',
        'category' => '\Membercare\Client\Model\CompanyCategory',
        'company_name' => 'string',
        'company_name2' => 'string',
        'name_history' => '\Membercare\Client\Model\CompanyNameHistory[]',
        'business_numbers' => '\Membercare\Client\Model\BusinessNumbers',
        'custom_field_values_link' => 'string',
        'invoice_addresses' => '\Membercare\Client\Model\InvoiceAddressLinkToCompany[]',
        'readdressings' => '\Membercare\Client\Model\CompanyReAddressing[]',
        'default_agreement' => '\Membercare\Client\Model\Agreement',
        'public_establishment' => 'bool',
        'parent_company' => '\Membercare\Client\Model\CompanyHierarchy',
        'foreign_system_mappings' => '\Membercare\Client\Model\ForeignSystemMapping[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'url' => null,
        'debtor_account_number' => null,
        'name' => null,
        'contacts' => null,
        'addresses' => null,
        'custom_field_values' => null,
        'invoices_link' => null,
        'member_type' => null,
        'default_payer_link' => null,
        'dafualt_payer_rule' => null,
        'close_date' => 'date-time',
        'einvoice_ean' => null,
        'einvoice_email' => null,
        'close_reason' => null,
        'default_address_type' => null,
        'external_id' => null,
        'last_change' => 'date-time',
        'finance_type' => null,
        'id' => 'int64',
        'category' => null,
        'company_name' => null,
        'company_name2' => null,
        'name_history' => null,
        'business_numbers' => null,
        'custom_field_values_link' => null,
        'invoice_addresses' => null,
        'readdressings' => null,
        'default_agreement' => null,
        'public_establishment' => null,
        'parent_company' => null,
        'foreign_system_mappings' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'url' => 'url',
        'debtor_account_number' => 'debtorAccountNumber',
        'name' => 'name',
        'contacts' => 'contacts',
        'addresses' => 'addresses',
        'custom_field_values' => 'customFieldValues',
        'invoices_link' => 'invoicesLink',
        'member_type' => 'memberType',
        'default_payer_link' => 'defaultPayerLink',
        'dafualt_payer_rule' => 'dafualtPayerRule',
        'close_date' => 'closeDate',
        'einvoice_ean' => 'einvoiceEan',
        'einvoice_email' => 'einvoiceEmail',
        'close_reason' => 'closeReason',
        'default_address_type' => 'defaultAddressType',
        'external_id' => 'externalId',
        'last_change' => 'lastChange',
        'finance_type' => 'financeType',
        'id' => 'id',
        'category' => 'category',
        'company_name' => 'companyName',
        'company_name2' => 'companyName2',
        'name_history' => 'nameHistory',
        'business_numbers' => 'businessNumbers',
        'custom_field_values_link' => 'customFieldValuesLink',
        'invoice_addresses' => 'invoiceAddresses',
        'readdressings' => 'readdressings',
        'default_agreement' => 'defaultAgreement',
        'public_establishment' => 'publicEstablishment',
        'parent_company' => 'parentCompany',
        'foreign_system_mappings' => 'foreignSystemMappings'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'url' => 'setUrl',
        'debtor_account_number' => 'setDebtorAccountNumber',
        'name' => 'setName',
        'contacts' => 'setContacts',
        'addresses' => 'setAddresses',
        'custom_field_values' => 'setCustomFieldValues',
        'invoices_link' => 'setInvoicesLink',
        'member_type' => 'setMemberType',
        'default_payer_link' => 'setDefaultPayerLink',
        'dafualt_payer_rule' => 'setDafualtPayerRule',
        'close_date' => 'setCloseDate',
        'einvoice_ean' => 'setEinvoiceEan',
        'einvoice_email' => 'setEinvoiceEmail',
        'close_reason' => 'setCloseReason',
        'default_address_type' => 'setDefaultAddressType',
        'external_id' => 'setExternalId',
        'last_change' => 'setLastChange',
        'finance_type' => 'setFinanceType',
        'id' => 'setId',
        'category' => 'setCategory',
        'company_name' => 'setCompanyName',
        'company_name2' => 'setCompanyName2',
        'name_history' => 'setNameHistory',
        'business_numbers' => 'setBusinessNumbers',
        'custom_field_values_link' => 'setCustomFieldValuesLink',
        'invoice_addresses' => 'setInvoiceAddresses',
        'readdressings' => 'setReaddressings',
        'default_agreement' => 'setDefaultAgreement',
        'public_establishment' => 'setPublicEstablishment',
        'parent_company' => 'setParentCompany',
        'foreign_system_mappings' => 'setForeignSystemMappings'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'url' => 'getUrl',
        'debtor_account_number' => 'getDebtorAccountNumber',
        'name' => 'getName',
        'contacts' => 'getContacts',
        'addresses' => 'getAddresses',
        'custom_field_values' => 'getCustomFieldValues',
        'invoices_link' => 'getInvoicesLink',
        'member_type' => 'getMemberType',
        'default_payer_link' => 'getDefaultPayerLink',
        'dafualt_payer_rule' => 'getDafualtPayerRule',
        'close_date' => 'getCloseDate',
        'einvoice_ean' => 'getEinvoiceEan',
        'einvoice_email' => 'getEinvoiceEmail',
        'close_reason' => 'getCloseReason',
        'default_address_type' => 'getDefaultAddressType',
        'external_id' => 'getExternalId',
        'last_change' => 'getLastChange',
        'finance_type' => 'getFinanceType',
        'id' => 'getId',
        'category' => 'getCategory',
        'company_name' => 'getCompanyName',
        'company_name2' => 'getCompanyName2',
        'name_history' => 'getNameHistory',
        'business_numbers' => 'getBusinessNumbers',
        'custom_field_values_link' => 'getCustomFieldValuesLink',
        'invoice_addresses' => 'getInvoiceAddresses',
        'readdressings' => 'getReaddressings',
        'default_agreement' => 'getDefaultAgreement',
        'public_establishment' => 'getPublicEstablishment',
        'parent_company' => 'getParentCompany',
        'foreign_system_mappings' => 'getForeignSystemMappings'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['url'] = isset($data['url']) ? $data['url'] : null;
        $this->container['debtor_account_number'] = isset($data['debtor_account_number']) ? $data['debtor_account_number'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['contacts'] = isset($data['contacts']) ? $data['contacts'] : null;
        $this->container['addresses'] = isset($data['addresses']) ? $data['addresses'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
        $this->container['invoices_link'] = isset($data['invoices_link']) ? $data['invoices_link'] : null;
        $this->container['member_type'] = isset($data['member_type']) ? $data['member_type'] : null;
        $this->container['default_payer_link'] = isset($data['default_payer_link']) ? $data['default_payer_link'] : null;
        $this->container['dafualt_payer_rule'] = isset($data['dafualt_payer_rule']) ? $data['dafualt_payer_rule'] : null;
        $this->container['close_date'] = isset($data['close_date']) ? $data['close_date'] : null;
        $this->container['einvoice_ean'] = isset($data['einvoice_ean']) ? $data['einvoice_ean'] : null;
        $this->container['einvoice_email'] = isset($data['einvoice_email']) ? $data['einvoice_email'] : null;
        $this->container['close_reason'] = isset($data['close_reason']) ? $data['close_reason'] : null;
        $this->container['default_address_type'] = isset($data['default_address_type']) ? $data['default_address_type'] : null;
        $this->container['external_id'] = isset($data['external_id']) ? $data['external_id'] : null;
        $this->container['last_change'] = isset($data['last_change']) ? $data['last_change'] : null;
        $this->container['finance_type'] = isset($data['finance_type']) ? $data['finance_type'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['company_name2'] = isset($data['company_name2']) ? $data['company_name2'] : null;
        $this->container['name_history'] = isset($data['name_history']) ? $data['name_history'] : null;
        $this->container['business_numbers'] = isset($data['business_numbers']) ? $data['business_numbers'] : null;
        $this->container['custom_field_values_link'] = isset($data['custom_field_values_link']) ? $data['custom_field_values_link'] : null;
        $this->container['invoice_addresses'] = isset($data['invoice_addresses']) ? $data['invoice_addresses'] : null;
        $this->container['readdressings'] = isset($data['readdressings']) ? $data['readdressings'] : null;
        $this->container['default_agreement'] = isset($data['default_agreement']) ? $data['default_agreement'] : null;
        $this->container['public_establishment'] = isset($data['public_establishment']) ? $data['public_establishment'] : null;
        $this->container['parent_company'] = isset($data['parent_company']) ? $data['parent_company'] : null;
        $this->container['foreign_system_mappings'] = isset($data['foreign_system_mappings']) ? $data['foreign_system_mappings'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets url
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string $url The link to the current resource
     *
     * @return $this
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets debtor_account_number
     *
     * @return string
     */
    public function getDebtorAccountNumber()
    {
        return $this->container['debtor_account_number'];
    }

    /**
     * Sets debtor_account_number
     *
     * @param string $debtor_account_number The identifying number
     *
     * @return $this
     */
    public function setDebtorAccountNumber($debtor_account_number)
    {
        $this->container['debtor_account_number'] = $debtor_account_number;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name The full name of the member
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets contacts
     *
     * @return \Membercare\Client\Model\Contact[]
     */
    public function getContacts()
    {
        return $this->container['contacts'];
    }

    /**
     * Sets contacts
     *
     * @param \Membercare\Client\Model\Contact[] $contacts List of contact informations of the member
     *
     * @return $this
     */
    public function setContacts($contacts)
    {
        $this->container['contacts'] = $contacts;

        return $this;
    }

    /**
     * Gets addresses
     *
     * @return \Membercare\Client\Model\PostalAddress[]
     */
    public function getAddresses()
    {
        return $this->container['addresses'];
    }

    /**
     * Sets addresses
     *
     * @param \Membercare\Client\Model\PostalAddress[] $addresses List of address information of the member (primary and secundary addresses only)
     *
     * @return $this
     */
    public function setAddresses($addresses)
    {
        $this->container['addresses'] = $addresses;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Membercare\Client\Model\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Membercare\Client\Model\CustomFieldValue[] $custom_field_values The members CustomFieldValues
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }

    /**
     * Gets invoices_link
     *
     * @return string
     */
    public function getInvoicesLink()
    {
        return $this->container['invoices_link'];
    }

    /**
     * Sets invoices_link
     *
     * @param string $invoices_link Url to the collection of the member Invoices
     *
     * @return $this
     */
    public function setInvoicesLink($invoices_link)
    {
        $this->container['invoices_link'] = $invoices_link;

        return $this;
    }

    /**
     * Gets member_type
     *
     * @return \Membercare\Client\Model\UnitType
     */
    public function getMemberType()
    {
        return $this->container['member_type'];
    }

    /**
     * Sets member_type
     *
     * @param \Membercare\Client\Model\UnitType $member_type member_type
     *
     * @return $this
     */
    public function setMemberType($member_type)
    {
        $this->container['member_type'] = $member_type;

        return $this;
    }

    /**
     * Gets default_payer_link
     *
     * @return string
     */
    public function getDefaultPayerLink()
    {
        return $this->container['default_payer_link'];
    }

    /**
     * Sets default_payer_link
     *
     * @param string $default_payer_link Link to the default payer for the member.
     *
     * @return $this
     */
    public function setDefaultPayerLink($default_payer_link)
    {
        $this->container['default_payer_link'] = $default_payer_link;

        return $this;
    }

    /**
     * Gets dafualt_payer_rule
     *
     * @return \Membercare\Client\Model\PayerRule
     */
    public function getDafualtPayerRule()
    {
        return $this->container['dafualt_payer_rule'];
    }

    /**
     * Sets dafualt_payer_rule
     *
     * @param \Membercare\Client\Model\PayerRule $dafualt_payer_rule dafualt_payer_rule
     *
     * @return $this
     */
    public function setDafualtPayerRule($dafualt_payer_rule)
    {
        $this->container['dafualt_payer_rule'] = $dafualt_payer_rule;

        return $this;
    }

    /**
     * Gets close_date
     *
     * @return \DateTime
     */
    public function getCloseDate()
    {
        return $this->container['close_date'];
    }

    /**
     * Sets close_date
     *
     * @param \DateTime $close_date The day the unit was closed.  Value is ignored when creating or updating!
     *
     * @return $this
     */
    public function setCloseDate($close_date)
    {
        $this->container['close_date'] = $close_date;

        return $this;
    }

    /**
     * Gets einvoice_ean
     *
     * @return string
     */
    public function getEinvoiceEan()
    {
        return $this->container['einvoice_ean'];
    }

    /**
     * Sets einvoice_ean
     *
     * @param string $einvoice_ean Ean for electronic invoicing
     *
     * @return $this
     */
    public function setEinvoiceEan($einvoice_ean)
    {
        $this->container['einvoice_ean'] = $einvoice_ean;

        return $this;
    }

    /**
     * Gets einvoice_email
     *
     * @return string
     */
    public function getEinvoiceEmail()
    {
        return $this->container['einvoice_email'];
    }

    /**
     * Sets einvoice_email
     *
     * @param string $einvoice_email Email for electronic invoicing
     *
     * @return $this
     */
    public function setEinvoiceEmail($einvoice_email)
    {
        $this->container['einvoice_email'] = $einvoice_email;

        return $this;
    }

    /**
     * Gets close_reason
     *
     * @return \Membercare\Client\Model\CloseReason
     */
    public function getCloseReason()
    {
        return $this->container['close_reason'];
    }

    /**
     * Sets close_reason
     *
     * @param \Membercare\Client\Model\CloseReason $close_reason close_reason
     *
     * @return $this
     */
    public function setCloseReason($close_reason)
    {
        $this->container['close_reason'] = $close_reason;

        return $this;
    }

    /**
     * Gets default_address_type
     *
     * @return \Membercare\Client\Model\AddressRule
     */
    public function getDefaultAddressType()
    {
        return $this->container['default_address_type'];
    }

    /**
     * Sets default_address_type
     *
     * @param \Membercare\Client\Model\AddressRule $default_address_type default_address_type
     *
     * @return $this
     */
    public function setDefaultAddressType($default_address_type)
    {
        $this->container['default_address_type'] = $default_address_type;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string $external_id Id that comes from an external source to identify a member that exists both in Membercare and in another system
     *
     * @return $this
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets last_change
     *
     * @return \DateTime
     */
    public function getLastChange()
    {
        return $this->container['last_change'];
    }

    /**
     * Sets last_change
     *
     * @param \DateTime $last_change When was the base entity last changed
     *
     * @return $this
     */
    public function setLastChange($last_change)
    {
        $this->container['last_change'] = $last_change;

        return $this;
    }

    /**
     * Gets finance_type
     *
     * @return \Membercare\Client\Model\FinanceType
     */
    public function getFinanceType()
    {
        return $this->container['finance_type'];
    }

    /**
     * Sets finance_type
     *
     * @param \Membercare\Client\Model\FinanceType $finance_type finance_type
     *
     * @return $this
     */
    public function setFinanceType($finance_type)
    {
        $this->container['finance_type'] = $finance_type;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id Id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets category
     *
     * @return \Membercare\Client\Model\CompanyCategory
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param \Membercare\Client\Model\CompanyCategory $category category
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name The name of the company
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets company_name2
     *
     * @return string
     */
    public function getCompanyName2()
    {
        return $this->container['company_name2'];
    }

    /**
     * Sets company_name2
     *
     * @param string $company_name2 The name2 of the company
     *
     * @return $this
     */
    public function setCompanyName2($company_name2)
    {
        $this->container['company_name2'] = $company_name2;

        return $this;
    }

    /**
     * Gets name_history
     *
     * @return \Membercare\Client\Model\CompanyNameHistory[]
     */
    public function getNameHistory()
    {
        return $this->container['name_history'];
    }

    /**
     * Sets name_history
     *
     * @param \Membercare\Client\Model\CompanyNameHistory[] $name_history If loaded this will show name changes
     *
     * @return $this
     */
    public function setNameHistory($name_history)
    {
        $this->container['name_history'] = $name_history;

        return $this;
    }

    /**
     * Gets business_numbers
     *
     * @return \Membercare\Client\Model\BusinessNumbers
     */
    public function getBusinessNumbers()
    {
        return $this->container['business_numbers'];
    }

    /**
     * Sets business_numbers
     *
     * @param \Membercare\Client\Model\BusinessNumbers $business_numbers business_numbers
     *
     * @return $this
     */
    public function setBusinessNumbers($business_numbers)
    {
        $this->container['business_numbers'] = $business_numbers;

        return $this;
    }

    /**
     * Gets custom_field_values_link
     *
     * @return string
     */
    public function getCustomFieldValuesLink()
    {
        return $this->container['custom_field_values_link'];
    }

    /**
     * Sets custom_field_values_link
     *
     * @param string $custom_field_values_link Url to the collection of the companys CustomFieldValues
     *
     * @return $this
     */
    public function setCustomFieldValuesLink($custom_field_values_link)
    {
        $this->container['custom_field_values_link'] = $custom_field_values_link;

        return $this;
    }

    /**
     * Gets invoice_addresses
     *
     * @return \Membercare\Client\Model\InvoiceAddressLinkToCompany[]
     */
    public function getInvoiceAddresses()
    {
        return $this->container['invoice_addresses'];
    }

    /**
     * Sets invoice_addresses
     *
     * @param \Membercare\Client\Model\InvoiceAddressLinkToCompany[] $invoice_addresses List of invoice address information of the member
     *
     * @return $this
     */
    public function setInvoiceAddresses($invoice_addresses)
    {
        $this->container['invoice_addresses'] = $invoice_addresses;

        return $this;
    }

    /**
     * Gets readdressings
     *
     * @return \Membercare\Client\Model\CompanyReAddressing[]
     */
    public function getReaddressings()
    {
        return $this->container['readdressings'];
    }

    /**
     * Sets readdressings
     *
     * @param \Membercare\Client\Model\CompanyReAddressing[] $readdressings List of readdressing information of the member
     *
     * @return $this
     */
    public function setReaddressings($readdressings)
    {
        $this->container['readdressings'] = $readdressings;

        return $this;
    }

    /**
     * Gets default_agreement
     *
     * @return \Membercare\Client\Model\Agreement
     */
    public function getDefaultAgreement()
    {
        return $this->container['default_agreement'];
    }

    /**
     * Sets default_agreement
     *
     * @param \Membercare\Client\Model\Agreement $default_agreement default_agreement
     *
     * @return $this
     */
    public function setDefaultAgreement($default_agreement)
    {
        $this->container['default_agreement'] = $default_agreement;

        return $this;
    }

    /**
     * Gets public_establishment
     *
     * @return bool
     */
    public function getPublicEstablishment()
    {
        return $this->container['public_establishment'];
    }

    /**
     * Sets public_establishment
     *
     * @param bool $public_establishment Public Establishment
     *
     * @return $this
     */
    public function setPublicEstablishment($public_establishment)
    {
        $this->container['public_establishment'] = $public_establishment;

        return $this;
    }

    /**
     * Gets parent_company
     *
     * @return \Membercare\Client\Model\CompanyHierarchy
     */
    public function getParentCompany()
    {
        return $this->container['parent_company'];
    }

    /**
     * Sets parent_company
     *
     * @param \Membercare\Client\Model\CompanyHierarchy $parent_company parent_company
     *
     * @return $this
     */
    public function setParentCompany($parent_company)
    {
        $this->container['parent_company'] = $parent_company;

        return $this;
    }

    /**
     * Gets foreign_system_mappings
     *
     * @return \Membercare\Client\Model\ForeignSystemMapping[]
     */
    public function getForeignSystemMappings()
    {
        return $this->container['foreign_system_mappings'];
    }

    /**
     * Sets foreign_system_mappings
     *
     * @param \Membercare\Client\Model\ForeignSystemMapping[] $foreign_system_mappings foreign_system_mappings
     *
     * @return $this
     */
    public function setForeignSystemMappings($foreign_system_mappings)
    {
        $this->container['foreign_system_mappings'] = $foreign_system_mappings;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
