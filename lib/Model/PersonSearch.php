<?php
/**
 * PersonSearch
 *
 * PHP version 5
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Membercare API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@membercare.dk
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Membercare\Client\Model;

use \ArrayAccess;
use \Membercare\Client\ObjectSerializer;

/**
 * PersonSearch Class Doc Comment
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PersonSearch implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PersonSearch';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'name' => 'string',
        'phone_number' => 'string',
        'custom_field_values_match' => '\Membercare\Client\Model\SearchBooleanType',
        'custom_field_values' => '\Membercare\Client\Model\CustomFieldValueSearch[]',
        'custom_field_value_criteria' => '\Membercare\Client\Model\PersonSearchCustomFieldValueCriteria',
        'person_info_criteria' => '\Membercare\Client\Model\PersonSearchPersonInfoCriteria',
        'board_member_criteria' => '\Membercare\Client\Model\PersonSearchBoardMemberCriteria',
        'membership_criteria' => '\Membercare\Client\Model\PersonSearchMembershipCriteria',
        'address_criteria' => '\Membercare\Client\Model\PersonSearchAddressCriteria',
        'interest_criteria' => '\Membercare\Client\Model\PersonSearchInterestCriteria'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'name' => null,
        'phone_number' => null,
        'custom_field_values_match' => null,
        'custom_field_values' => null,
        'custom_field_value_criteria' => null,
        'person_info_criteria' => null,
        'board_member_criteria' => null,
        'membership_criteria' => null,
        'address_criteria' => null,
        'interest_criteria' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'name' => 'name',
        'phone_number' => 'phoneNumber',
        'custom_field_values_match' => 'customFieldValuesMatch',
        'custom_field_values' => 'customFieldValues',
        'custom_field_value_criteria' => 'customFieldValueCriteria',
        'person_info_criteria' => 'personInfoCriteria',
        'board_member_criteria' => 'boardMemberCriteria',
        'membership_criteria' => 'membershipCriteria',
        'address_criteria' => 'addressCriteria',
        'interest_criteria' => 'interestCriteria'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'name' => 'setName',
        'phone_number' => 'setPhoneNumber',
        'custom_field_values_match' => 'setCustomFieldValuesMatch',
        'custom_field_values' => 'setCustomFieldValues',
        'custom_field_value_criteria' => 'setCustomFieldValueCriteria',
        'person_info_criteria' => 'setPersonInfoCriteria',
        'board_member_criteria' => 'setBoardMemberCriteria',
        'membership_criteria' => 'setMembershipCriteria',
        'address_criteria' => 'setAddressCriteria',
        'interest_criteria' => 'setInterestCriteria'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'name' => 'getName',
        'phone_number' => 'getPhoneNumber',
        'custom_field_values_match' => 'getCustomFieldValuesMatch',
        'custom_field_values' => 'getCustomFieldValues',
        'custom_field_value_criteria' => 'getCustomFieldValueCriteria',
        'person_info_criteria' => 'getPersonInfoCriteria',
        'board_member_criteria' => 'getBoardMemberCriteria',
        'membership_criteria' => 'getMembershipCriteria',
        'address_criteria' => 'getAddressCriteria',
        'interest_criteria' => 'getInterestCriteria'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['phone_number'] = isset($data['phone_number']) ? $data['phone_number'] : null;
        $this->container['custom_field_values_match'] = isset($data['custom_field_values_match']) ? $data['custom_field_values_match'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
        $this->container['custom_field_value_criteria'] = isset($data['custom_field_value_criteria']) ? $data['custom_field_value_criteria'] : null;
        $this->container['person_info_criteria'] = isset($data['person_info_criteria']) ? $data['person_info_criteria'] : null;
        $this->container['board_member_criteria'] = isset($data['board_member_criteria']) ? $data['board_member_criteria'] : null;
        $this->container['membership_criteria'] = isset($data['membership_criteria']) ? $data['membership_criteria'] : null;
        $this->container['address_criteria'] = isset($data['address_criteria']) ? $data['address_criteria'] : null;
        $this->container['interest_criteria'] = isset($data['interest_criteria']) ? $data['interest_criteria'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string $phone_number Use this to search for any phone number attached to a person (spaces and + will be ignored)
     *
     * @return $this
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets custom_field_values_match
     *
     * @return \Membercare\Client\Model\SearchBooleanType
     */
    public function getCustomFieldValuesMatch()
    {
        return $this->container['custom_field_values_match'];
    }

    /**
     * Sets custom_field_values_match
     *
     * @param \Membercare\Client\Model\SearchBooleanType $custom_field_values_match custom_field_values_match
     *
     * @return $this
     */
    public function setCustomFieldValuesMatch($custom_field_values_match)
    {
        $this->container['custom_field_values_match'] = $custom_field_values_match;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Membercare\Client\Model\CustomFieldValueSearch[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Membercare\Client\Model\CustomFieldValueSearch[] $custom_field_values A list of customfield values to match the persons custom fields. Please provide Type.Identifier and Value
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }

    /**
     * Gets custom_field_value_criteria
     *
     * @return \Membercare\Client\Model\PersonSearchCustomFieldValueCriteria
     */
    public function getCustomFieldValueCriteria()
    {
        return $this->container['custom_field_value_criteria'];
    }

    /**
     * Sets custom_field_value_criteria
     *
     * @param \Membercare\Client\Model\PersonSearchCustomFieldValueCriteria $custom_field_value_criteria custom_field_value_criteria
     *
     * @return $this
     */
    public function setCustomFieldValueCriteria($custom_field_value_criteria)
    {
        $this->container['custom_field_value_criteria'] = $custom_field_value_criteria;

        return $this;
    }

    /**
     * Gets person_info_criteria
     *
     * @return \Membercare\Client\Model\PersonSearchPersonInfoCriteria
     */
    public function getPersonInfoCriteria()
    {
        return $this->container['person_info_criteria'];
    }

    /**
     * Sets person_info_criteria
     *
     * @param \Membercare\Client\Model\PersonSearchPersonInfoCriteria $person_info_criteria person_info_criteria
     *
     * @return $this
     */
    public function setPersonInfoCriteria($person_info_criteria)
    {
        $this->container['person_info_criteria'] = $person_info_criteria;

        return $this;
    }

    /**
     * Gets board_member_criteria
     *
     * @return \Membercare\Client\Model\PersonSearchBoardMemberCriteria
     */
    public function getBoardMemberCriteria()
    {
        return $this->container['board_member_criteria'];
    }

    /**
     * Sets board_member_criteria
     *
     * @param \Membercare\Client\Model\PersonSearchBoardMemberCriteria $board_member_criteria board_member_criteria
     *
     * @return $this
     */
    public function setBoardMemberCriteria($board_member_criteria)
    {
        $this->container['board_member_criteria'] = $board_member_criteria;

        return $this;
    }

    /**
     * Gets membership_criteria
     *
     * @return \Membercare\Client\Model\PersonSearchMembershipCriteria
     */
    public function getMembershipCriteria()
    {
        return $this->container['membership_criteria'];
    }

    /**
     * Sets membership_criteria
     *
     * @param \Membercare\Client\Model\PersonSearchMembershipCriteria $membership_criteria membership_criteria
     *
     * @return $this
     */
    public function setMembershipCriteria($membership_criteria)
    {
        $this->container['membership_criteria'] = $membership_criteria;

        return $this;
    }

    /**
     * Gets address_criteria
     *
     * @return \Membercare\Client\Model\PersonSearchAddressCriteria
     */
    public function getAddressCriteria()
    {
        return $this->container['address_criteria'];
    }

    /**
     * Sets address_criteria
     *
     * @param \Membercare\Client\Model\PersonSearchAddressCriteria $address_criteria address_criteria
     *
     * @return $this
     */
    public function setAddressCriteria($address_criteria)
    {
        $this->container['address_criteria'] = $address_criteria;

        return $this;
    }

    /**
     * Gets interest_criteria
     *
     * @return \Membercare\Client\Model\PersonSearchInterestCriteria
     */
    public function getInterestCriteria()
    {
        return $this->container['interest_criteria'];
    }

    /**
     * Sets interest_criteria
     *
     * @param \Membercare\Client\Model\PersonSearchInterestCriteria $interest_criteria interest_criteria
     *
     * @return $this
     */
    public function setInterestCriteria($interest_criteria)
    {
        $this->container['interest_criteria'] = $interest_criteria;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
