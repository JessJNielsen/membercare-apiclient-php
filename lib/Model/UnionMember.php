<?php
/**
 * UnionMember
 *
 * PHP version 5
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Membercare API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@membercare.dk
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Membercare\Client\Model;

use \ArrayAccess;
use \Membercare\Client\ObjectSerializer;

/**
 * UnionMember Class Doc Comment
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UnionMember implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'UnionMember';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'url' => 'string',
        'key' => 'string',
        'person_name' => 'string',
        'person_debtor_account_number' => 'string',
        'person_email' => 'string',
        'person_cellphone' => 'string',
        'employment_email' => 'string',
        'employment_phone' => 'string',
        'employment_cellphone' => 'string',
        'occupation_title' => '\Membercare\Client\Model\OccupationTitle',
        'employment_category' => '\Membercare\Client\Model\EmploymentCategory',
        'company_name' => 'string',
        'company_debtor_account_number' => 'string',
        'union_group_name' => 'string',
        'organization_identification' => 'string',
        'organization_name' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'url' => null,
        'key' => null,
        'person_name' => null,
        'person_debtor_account_number' => null,
        'person_email' => null,
        'person_cellphone' => null,
        'employment_email' => null,
        'employment_phone' => null,
        'employment_cellphone' => null,
        'occupation_title' => null,
        'employment_category' => null,
        'company_name' => null,
        'company_debtor_account_number' => null,
        'union_group_name' => null,
        'organization_identification' => null,
        'organization_name' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'url' => 'url',
        'key' => 'key',
        'person_name' => 'personName',
        'person_debtor_account_number' => 'personDebtorAccountNumber',
        'person_email' => 'personEmail',
        'person_cellphone' => 'personCellphone',
        'employment_email' => 'employmentEmail',
        'employment_phone' => 'employmentPhone',
        'employment_cellphone' => 'employmentCellphone',
        'occupation_title' => 'occupationTitle',
        'employment_category' => 'employmentCategory',
        'company_name' => 'companyName',
        'company_debtor_account_number' => 'companyDebtorAccountNumber',
        'union_group_name' => 'unionGroupName',
        'organization_identification' => 'organizationIdentification',
        'organization_name' => 'organizationName'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'url' => 'setUrl',
        'key' => 'setKey',
        'person_name' => 'setPersonName',
        'person_debtor_account_number' => 'setPersonDebtorAccountNumber',
        'person_email' => 'setPersonEmail',
        'person_cellphone' => 'setPersonCellphone',
        'employment_email' => 'setEmploymentEmail',
        'employment_phone' => 'setEmploymentPhone',
        'employment_cellphone' => 'setEmploymentCellphone',
        'occupation_title' => 'setOccupationTitle',
        'employment_category' => 'setEmploymentCategory',
        'company_name' => 'setCompanyName',
        'company_debtor_account_number' => 'setCompanyDebtorAccountNumber',
        'union_group_name' => 'setUnionGroupName',
        'organization_identification' => 'setOrganizationIdentification',
        'organization_name' => 'setOrganizationName'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'url' => 'getUrl',
        'key' => 'getKey',
        'person_name' => 'getPersonName',
        'person_debtor_account_number' => 'getPersonDebtorAccountNumber',
        'person_email' => 'getPersonEmail',
        'person_cellphone' => 'getPersonCellphone',
        'employment_email' => 'getEmploymentEmail',
        'employment_phone' => 'getEmploymentPhone',
        'employment_cellphone' => 'getEmploymentCellphone',
        'occupation_title' => 'getOccupationTitle',
        'employment_category' => 'getEmploymentCategory',
        'company_name' => 'getCompanyName',
        'company_debtor_account_number' => 'getCompanyDebtorAccountNumber',
        'union_group_name' => 'getUnionGroupName',
        'organization_identification' => 'getOrganizationIdentification',
        'organization_name' => 'getOrganizationName'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['url'] = isset($data['url']) ? $data['url'] : null;
        $this->container['key'] = isset($data['key']) ? $data['key'] : null;
        $this->container['person_name'] = isset($data['person_name']) ? $data['person_name'] : null;
        $this->container['person_debtor_account_number'] = isset($data['person_debtor_account_number']) ? $data['person_debtor_account_number'] : null;
        $this->container['person_email'] = isset($data['person_email']) ? $data['person_email'] : null;
        $this->container['person_cellphone'] = isset($data['person_cellphone']) ? $data['person_cellphone'] : null;
        $this->container['employment_email'] = isset($data['employment_email']) ? $data['employment_email'] : null;
        $this->container['employment_phone'] = isset($data['employment_phone']) ? $data['employment_phone'] : null;
        $this->container['employment_cellphone'] = isset($data['employment_cellphone']) ? $data['employment_cellphone'] : null;
        $this->container['occupation_title'] = isset($data['occupation_title']) ? $data['occupation_title'] : null;
        $this->container['employment_category'] = isset($data['employment_category']) ? $data['employment_category'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['company_debtor_account_number'] = isset($data['company_debtor_account_number']) ? $data['company_debtor_account_number'] : null;
        $this->container['union_group_name'] = isset($data['union_group_name']) ? $data['union_group_name'] : null;
        $this->container['organization_identification'] = isset($data['organization_identification']) ? $data['organization_identification'] : null;
        $this->container['organization_name'] = isset($data['organization_name']) ? $data['organization_name'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets url
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string $url The link to the current resource
     *
     * @return $this
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets key
     *
     * @return string
     */
    public function getKey()
    {
        return $this->container['key'];
    }

    /**
     * Sets key
     *
     * @param string $key key
     *
     * @return $this
     */
    public function setKey($key)
    {
        $this->container['key'] = $key;

        return $this;
    }

    /**
     * Gets person_name
     *
     * @return string
     */
    public function getPersonName()
    {
        return $this->container['person_name'];
    }

    /**
     * Sets person_name
     *
     * @param string $person_name person_name
     *
     * @return $this
     */
    public function setPersonName($person_name)
    {
        $this->container['person_name'] = $person_name;

        return $this;
    }

    /**
     * Gets person_debtor_account_number
     *
     * @return string
     */
    public function getPersonDebtorAccountNumber()
    {
        return $this->container['person_debtor_account_number'];
    }

    /**
     * Sets person_debtor_account_number
     *
     * @param string $person_debtor_account_number person_debtor_account_number
     *
     * @return $this
     */
    public function setPersonDebtorAccountNumber($person_debtor_account_number)
    {
        $this->container['person_debtor_account_number'] = $person_debtor_account_number;

        return $this;
    }

    /**
     * Gets person_email
     *
     * @return string
     */
    public function getPersonEmail()
    {
        return $this->container['person_email'];
    }

    /**
     * Sets person_email
     *
     * @param string $person_email person_email
     *
     * @return $this
     */
    public function setPersonEmail($person_email)
    {
        $this->container['person_email'] = $person_email;

        return $this;
    }

    /**
     * Gets person_cellphone
     *
     * @return string
     */
    public function getPersonCellphone()
    {
        return $this->container['person_cellphone'];
    }

    /**
     * Sets person_cellphone
     *
     * @param string $person_cellphone person_cellphone
     *
     * @return $this
     */
    public function setPersonCellphone($person_cellphone)
    {
        $this->container['person_cellphone'] = $person_cellphone;

        return $this;
    }

    /**
     * Gets employment_email
     *
     * @return string
     */
    public function getEmploymentEmail()
    {
        return $this->container['employment_email'];
    }

    /**
     * Sets employment_email
     *
     * @param string $employment_email employment_email
     *
     * @return $this
     */
    public function setEmploymentEmail($employment_email)
    {
        $this->container['employment_email'] = $employment_email;

        return $this;
    }

    /**
     * Gets employment_phone
     *
     * @return string
     */
    public function getEmploymentPhone()
    {
        return $this->container['employment_phone'];
    }

    /**
     * Sets employment_phone
     *
     * @param string $employment_phone employment_phone
     *
     * @return $this
     */
    public function setEmploymentPhone($employment_phone)
    {
        $this->container['employment_phone'] = $employment_phone;

        return $this;
    }

    /**
     * Gets employment_cellphone
     *
     * @return string
     */
    public function getEmploymentCellphone()
    {
        return $this->container['employment_cellphone'];
    }

    /**
     * Sets employment_cellphone
     *
     * @param string $employment_cellphone employment_cellphone
     *
     * @return $this
     */
    public function setEmploymentCellphone($employment_cellphone)
    {
        $this->container['employment_cellphone'] = $employment_cellphone;

        return $this;
    }

    /**
     * Gets occupation_title
     *
     * @return \Membercare\Client\Model\OccupationTitle
     */
    public function getOccupationTitle()
    {
        return $this->container['occupation_title'];
    }

    /**
     * Sets occupation_title
     *
     * @param \Membercare\Client\Model\OccupationTitle $occupation_title occupation_title
     *
     * @return $this
     */
    public function setOccupationTitle($occupation_title)
    {
        $this->container['occupation_title'] = $occupation_title;

        return $this;
    }

    /**
     * Gets employment_category
     *
     * @return \Membercare\Client\Model\EmploymentCategory
     */
    public function getEmploymentCategory()
    {
        return $this->container['employment_category'];
    }

    /**
     * Sets employment_category
     *
     * @param \Membercare\Client\Model\EmploymentCategory $employment_category employment_category
     *
     * @return $this
     */
    public function setEmploymentCategory($employment_category)
    {
        $this->container['employment_category'] = $employment_category;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name company_name
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets company_debtor_account_number
     *
     * @return string
     */
    public function getCompanyDebtorAccountNumber()
    {
        return $this->container['company_debtor_account_number'];
    }

    /**
     * Sets company_debtor_account_number
     *
     * @param string $company_debtor_account_number company_debtor_account_number
     *
     * @return $this
     */
    public function setCompanyDebtorAccountNumber($company_debtor_account_number)
    {
        $this->container['company_debtor_account_number'] = $company_debtor_account_number;

        return $this;
    }

    /**
     * Gets union_group_name
     *
     * @return string
     */
    public function getUnionGroupName()
    {
        return $this->container['union_group_name'];
    }

    /**
     * Sets union_group_name
     *
     * @param string $union_group_name union_group_name
     *
     * @return $this
     */
    public function setUnionGroupName($union_group_name)
    {
        $this->container['union_group_name'] = $union_group_name;

        return $this;
    }

    /**
     * Gets organization_identification
     *
     * @return string
     */
    public function getOrganizationIdentification()
    {
        return $this->container['organization_identification'];
    }

    /**
     * Sets organization_identification
     *
     * @param string $organization_identification organization_identification
     *
     * @return $this
     */
    public function setOrganizationIdentification($organization_identification)
    {
        $this->container['organization_identification'] = $organization_identification;

        return $this;
    }

    /**
     * Gets organization_name
     *
     * @return string
     */
    public function getOrganizationName()
    {
        return $this->container['organization_name'];
    }

    /**
     * Sets organization_name
     *
     * @param string $organization_name organization_name
     *
     * @return $this
     */
    public function setOrganizationName($organization_name)
    {
        $this->container['organization_name'] = $organization_name;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
