<?php
/**
 * CustomFieldDefinition
 *
 * PHP version 5
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Membercare API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@membercare.dk
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Membercare\Client\Model;

use \ArrayAccess;
use \Membercare\Client\ObjectSerializer;

/**
 * CustomFieldDefinition Class Doc Comment
 *
 * @category Class
 * @description Class represents a CustomFieldType - This is meant to be used in relation to CustomFieldValue.
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomFieldDefinition implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CustomFieldDefinition';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'url' => 'string',
        'name' => 'string',
        'description' => 'string',
        'data_type' => '\Membercare\Client\Model\CustomFieldType',
        'identifier' => 'int',
        'web_enabled' => 'bool',
        'table_id' => 'int',
        'table_values_string' => '\Membercare\Client\Model\TableValueString[]',
        'valid' => 'bool',
        'for_specific_organizations' => 'bool',
        'default_value_bool' => 'bool',
        'default_value_date_time' => '\DateTime',
        'default_value_decimal' => 'double',
        'default_value_long' => 'int',
        'default_value_string' => 'string',
        'default_value_string_from_table' => 'string',
        'default_value_string_max' => 'string',
        'group' => '\Membercare\Client\Model\Group',
        'allowed_parent_types' => '\Membercare\Client\Model\CustomFieldParentTypeFlag[]',
        'allow_edit' => 'bool',
        'unique_field' => 'bool',
        'unique_value' => 'bool',
        'sequence' => 'int',
        'mandatory' => 'bool',
        'organizations' => '\Membercare\Client\Model\SimpleOrganization[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'url' => null,
        'name' => null,
        'description' => null,
        'data_type' => null,
        'identifier' => 'int64',
        'web_enabled' => null,
        'table_id' => 'int64',
        'table_values_string' => null,
        'valid' => null,
        'for_specific_organizations' => null,
        'default_value_bool' => null,
        'default_value_date_time' => 'date-time',
        'default_value_decimal' => 'double',
        'default_value_long' => 'int64',
        'default_value_string' => null,
        'default_value_string_from_table' => null,
        'default_value_string_max' => null,
        'group' => null,
        'allowed_parent_types' => null,
        'allow_edit' => null,
        'unique_field' => null,
        'unique_value' => null,
        'sequence' => 'int32',
        'mandatory' => null,
        'organizations' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'url' => 'url',
        'name' => 'name',
        'description' => 'description',
        'data_type' => 'dataType',
        'identifier' => 'identifier',
        'web_enabled' => 'webEnabled',
        'table_id' => 'tableId',
        'table_values_string' => 'tableValuesString',
        'valid' => 'valid',
        'for_specific_organizations' => 'forSpecificOrganizations',
        'default_value_bool' => 'defaultValueBool',
        'default_value_date_time' => 'defaultValueDateTime',
        'default_value_decimal' => 'defaultValueDecimal',
        'default_value_long' => 'defaultValueLong',
        'default_value_string' => 'defaultValueString',
        'default_value_string_from_table' => 'defaultValueStringFromTable',
        'default_value_string_max' => 'defaultValueStringMax',
        'group' => 'group',
        'allowed_parent_types' => 'allowedParentTypes',
        'allow_edit' => 'allowEdit',
        'unique_field' => 'uniqueField',
        'unique_value' => 'uniqueValue',
        'sequence' => 'sequence',
        'mandatory' => 'mandatory',
        'organizations' => 'organizations'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'url' => 'setUrl',
        'name' => 'setName',
        'description' => 'setDescription',
        'data_type' => 'setDataType',
        'identifier' => 'setIdentifier',
        'web_enabled' => 'setWebEnabled',
        'table_id' => 'setTableId',
        'table_values_string' => 'setTableValuesString',
        'valid' => 'setValid',
        'for_specific_organizations' => 'setForSpecificOrganizations',
        'default_value_bool' => 'setDefaultValueBool',
        'default_value_date_time' => 'setDefaultValueDateTime',
        'default_value_decimal' => 'setDefaultValueDecimal',
        'default_value_long' => 'setDefaultValueLong',
        'default_value_string' => 'setDefaultValueString',
        'default_value_string_from_table' => 'setDefaultValueStringFromTable',
        'default_value_string_max' => 'setDefaultValueStringMax',
        'group' => 'setGroup',
        'allowed_parent_types' => 'setAllowedParentTypes',
        'allow_edit' => 'setAllowEdit',
        'unique_field' => 'setUniqueField',
        'unique_value' => 'setUniqueValue',
        'sequence' => 'setSequence',
        'mandatory' => 'setMandatory',
        'organizations' => 'setOrganizations'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'url' => 'getUrl',
        'name' => 'getName',
        'description' => 'getDescription',
        'data_type' => 'getDataType',
        'identifier' => 'getIdentifier',
        'web_enabled' => 'getWebEnabled',
        'table_id' => 'getTableId',
        'table_values_string' => 'getTableValuesString',
        'valid' => 'getValid',
        'for_specific_organizations' => 'getForSpecificOrganizations',
        'default_value_bool' => 'getDefaultValueBool',
        'default_value_date_time' => 'getDefaultValueDateTime',
        'default_value_decimal' => 'getDefaultValueDecimal',
        'default_value_long' => 'getDefaultValueLong',
        'default_value_string' => 'getDefaultValueString',
        'default_value_string_from_table' => 'getDefaultValueStringFromTable',
        'default_value_string_max' => 'getDefaultValueStringMax',
        'group' => 'getGroup',
        'allowed_parent_types' => 'getAllowedParentTypes',
        'allow_edit' => 'getAllowEdit',
        'unique_field' => 'getUniqueField',
        'unique_value' => 'getUniqueValue',
        'sequence' => 'getSequence',
        'mandatory' => 'getMandatory',
        'organizations' => 'getOrganizations'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['url'] = isset($data['url']) ? $data['url'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['data_type'] = isset($data['data_type']) ? $data['data_type'] : null;
        $this->container['identifier'] = isset($data['identifier']) ? $data['identifier'] : null;
        $this->container['web_enabled'] = isset($data['web_enabled']) ? $data['web_enabled'] : null;
        $this->container['table_id'] = isset($data['table_id']) ? $data['table_id'] : null;
        $this->container['table_values_string'] = isset($data['table_values_string']) ? $data['table_values_string'] : null;
        $this->container['valid'] = isset($data['valid']) ? $data['valid'] : null;
        $this->container['for_specific_organizations'] = isset($data['for_specific_organizations']) ? $data['for_specific_organizations'] : null;
        $this->container['default_value_bool'] = isset($data['default_value_bool']) ? $data['default_value_bool'] : null;
        $this->container['default_value_date_time'] = isset($data['default_value_date_time']) ? $data['default_value_date_time'] : null;
        $this->container['default_value_decimal'] = isset($data['default_value_decimal']) ? $data['default_value_decimal'] : null;
        $this->container['default_value_long'] = isset($data['default_value_long']) ? $data['default_value_long'] : null;
        $this->container['default_value_string'] = isset($data['default_value_string']) ? $data['default_value_string'] : null;
        $this->container['default_value_string_from_table'] = isset($data['default_value_string_from_table']) ? $data['default_value_string_from_table'] : null;
        $this->container['default_value_string_max'] = isset($data['default_value_string_max']) ? $data['default_value_string_max'] : null;
        $this->container['group'] = isset($data['group']) ? $data['group'] : null;
        $this->container['allowed_parent_types'] = isset($data['allowed_parent_types']) ? $data['allowed_parent_types'] : null;
        $this->container['allow_edit'] = isset($data['allow_edit']) ? $data['allow_edit'] : null;
        $this->container['unique_field'] = isset($data['unique_field']) ? $data['unique_field'] : null;
        $this->container['unique_value'] = isset($data['unique_value']) ? $data['unique_value'] : null;
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['mandatory'] = isset($data['mandatory']) ? $data['mandatory'] : null;
        $this->container['organizations'] = isset($data['organizations']) ? $data['organizations'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets url
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string $url The link to the current resource
     *
     * @return $this
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Name of the CustomFieldType
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description The description of the CustomFieldType
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets data_type
     *
     * @return \Membercare\Client\Model\CustomFieldType
     */
    public function getDataType()
    {
        return $this->container['data_type'];
    }

    /**
     * Sets data_type
     *
     * @param \Membercare\Client\Model\CustomFieldType $data_type data_type
     *
     * @return $this
     */
    public function setDataType($data_type)
    {
        $this->container['data_type'] = $data_type;

        return $this;
    }

    /**
     * Gets identifier
     *
     * @return int
     */
    public function getIdentifier()
    {
        return $this->container['identifier'];
    }

    /**
     * Sets identifier
     *
     * @param int $identifier The unique identifier for this CustomFieldType
     *
     * @return $this
     */
    public function setIdentifier($identifier)
    {
        $this->container['identifier'] = $identifier;

        return $this;
    }

    /**
     * Gets web_enabled
     *
     * @return bool
     */
    public function getWebEnabled()
    {
        return $this->container['web_enabled'];
    }

    /**
     * Sets web_enabled
     *
     * @param bool $web_enabled Indicates if this Type should be used on publicly accessible websites
     *
     * @return $this
     */
    public function setWebEnabled($web_enabled)
    {
        $this->container['web_enabled'] = $web_enabled;

        return $this;
    }

    /**
     * Gets table_id
     *
     * @return int
     */
    public function getTableId()
    {
        return $this->container['table_id'];
    }

    /**
     * Sets table_id
     *
     * @param int $table_id Contains the ID of the table that is linked to this CustomField if the DataType is StringFromTable.
     *
     * @return $this
     */
    public function setTableId($table_id)
    {
        $this->container['table_id'] = $table_id;

        return $this;
    }

    /**
     * Gets table_values_string
     *
     * @return \Membercare\Client\Model\TableValueString[]
     */
    public function getTableValuesString()
    {
        return $this->container['table_values_string'];
    }

    /**
     * Sets table_values_string
     *
     * @param \Membercare\Client\Model\TableValueString[] $table_values_string Contains all allowed string values If the DataType is StringFromTable.
     *
     * @return $this
     */
    public function setTableValuesString($table_values_string)
    {
        $this->container['table_values_string'] = $table_values_string;

        return $this;
    }

    /**
     * Gets valid
     *
     * @return bool
     */
    public function getValid()
    {
        return $this->container['valid'];
    }

    /**
     * Sets valid
     *
     * @param bool $valid Indicates whether or not this customFieldType is valid to use.
     *
     * @return $this
     */
    public function setValid($valid)
    {
        $this->container['valid'] = $valid;

        return $this;
    }

    /**
     * Gets for_specific_organizations
     *
     * @return bool
     */
    public function getForSpecificOrganizations()
    {
        return $this->container['for_specific_organizations'];
    }

    /**
     * Sets for_specific_organizations
     *
     * @param bool $for_specific_organizations Indicates whether or not this customFieldType is to be used in specific organizations.
     *
     * @return $this
     */
    public function setForSpecificOrganizations($for_specific_organizations)
    {
        $this->container['for_specific_organizations'] = $for_specific_organizations;

        return $this;
    }

    /**
     * Gets default_value_bool
     *
     * @return bool
     */
    public function getDefaultValueBool()
    {
        return $this->container['default_value_bool'];
    }

    /**
     * Sets default_value_bool
     *
     * @param bool $default_value_bool The default boolean value, if set and if customFieldType is boolean
     *
     * @return $this
     */
    public function setDefaultValueBool($default_value_bool)
    {
        $this->container['default_value_bool'] = $default_value_bool;

        return $this;
    }

    /**
     * Gets default_value_date_time
     *
     * @return \DateTime
     */
    public function getDefaultValueDateTime()
    {
        return $this->container['default_value_date_time'];
    }

    /**
     * Sets default_value_date_time
     *
     * @param \DateTime $default_value_date_time The default datetime value, if set and if customFieldType is datetime
     *
     * @return $this
     */
    public function setDefaultValueDateTime($default_value_date_time)
    {
        $this->container['default_value_date_time'] = $default_value_date_time;

        return $this;
    }

    /**
     * Gets default_value_decimal
     *
     * @return double
     */
    public function getDefaultValueDecimal()
    {
        return $this->container['default_value_decimal'];
    }

    /**
     * Sets default_value_decimal
     *
     * @param double $default_value_decimal The default decimal value, if set and if customFieldType is decimal
     *
     * @return $this
     */
    public function setDefaultValueDecimal($default_value_decimal)
    {
        $this->container['default_value_decimal'] = $default_value_decimal;

        return $this;
    }

    /**
     * Gets default_value_long
     *
     * @return int
     */
    public function getDefaultValueLong()
    {
        return $this->container['default_value_long'];
    }

    /**
     * Sets default_value_long
     *
     * @param int $default_value_long The default double value, if set and if customFieldType is double
     *
     * @return $this
     */
    public function setDefaultValueLong($default_value_long)
    {
        $this->container['default_value_long'] = $default_value_long;

        return $this;
    }

    /**
     * Gets default_value_string
     *
     * @return string
     */
    public function getDefaultValueString()
    {
        return $this->container['default_value_string'];
    }

    /**
     * Sets default_value_string
     *
     * @param string $default_value_string The default string value, if set and if customFieldType is string
     *
     * @return $this
     */
    public function setDefaultValueString($default_value_string)
    {
        $this->container['default_value_string'] = $default_value_string;

        return $this;
    }

    /**
     * Gets default_value_string_from_table
     *
     * @return string
     */
    public function getDefaultValueStringFromTable()
    {
        return $this->container['default_value_string_from_table'];
    }

    /**
     * Sets default_value_string_from_table
     *
     * @param string $default_value_string_from_table The default string from table value, if set and if customFieldType is stringFromTable
     *
     * @return $this
     */
    public function setDefaultValueStringFromTable($default_value_string_from_table)
    {
        $this->container['default_value_string_from_table'] = $default_value_string_from_table;

        return $this;
    }

    /**
     * Gets default_value_string_max
     *
     * @return string
     */
    public function getDefaultValueStringMax()
    {
        return $this->container['default_value_string_max'];
    }

    /**
     * Sets default_value_string_max
     *
     * @param string $default_value_string_max The default stringMax value, if set and if customFieldType is stringMax
     *
     * @return $this
     */
    public function setDefaultValueStringMax($default_value_string_max)
    {
        $this->container['default_value_string_max'] = $default_value_string_max;

        return $this;
    }

    /**
     * Gets group
     *
     * @return \Membercare\Client\Model\Group
     */
    public function getGroup()
    {
        return $this->container['group'];
    }

    /**
     * Sets group
     *
     * @param \Membercare\Client\Model\Group $group group
     *
     * @return $this
     */
    public function setGroup($group)
    {
        $this->container['group'] = $group;

        return $this;
    }

    /**
     * Gets allowed_parent_types
     *
     * @return \Membercare\Client\Model\CustomFieldParentTypeFlag[]
     */
    public function getAllowedParentTypes()
    {
        return $this->container['allowed_parent_types'];
    }

    /**
     * Sets allowed_parent_types
     *
     * @param \Membercare\Client\Model\CustomFieldParentTypeFlag[] $allowed_parent_types A list of the valid parent types that a custom field value can be added to
     *
     * @return $this
     */
    public function setAllowedParentTypes($allowed_parent_types)
    {
        $this->container['allowed_parent_types'] = $allowed_parent_types;

        return $this;
    }

    /**
     * Gets allow_edit
     *
     * @return bool
     */
    public function getAllowEdit()
    {
        return $this->container['allow_edit'];
    }

    /**
     * Sets allow_edit
     *
     * @param bool $allow_edit Indicates whether or not it is allowed to edit this custom field
     *
     * @return $this
     */
    public function setAllowEdit($allow_edit)
    {
        $this->container['allow_edit'] = $allow_edit;

        return $this;
    }

    /**
     * Gets unique_field
     *
     * @return bool
     */
    public function getUniqueField()
    {
        return $this->container['unique_field'];
    }

    /**
     * Sets unique_field
     *
     * @param bool $unique_field Indicates whether only unique fields are allowed
     *
     * @return $this
     */
    public function setUniqueField($unique_field)
    {
        $this->container['unique_field'] = $unique_field;

        return $this;
    }

    /**
     * Gets unique_value
     *
     * @return bool
     */
    public function getUniqueValue()
    {
        return $this->container['unique_value'];
    }

    /**
     * Sets unique_value
     *
     * @param bool $unique_value Indicates whether only unique values are allowed
     *
     * @return $this
     */
    public function setUniqueValue($unique_value)
    {
        $this->container['unique_value'] = $unique_value;

        return $this;
    }

    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence Sequence number
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets mandatory
     *
     * @return bool
     */
    public function getMandatory()
    {
        return $this->container['mandatory'];
    }

    /**
     * Sets mandatory
     *
     * @param bool $mandatory Indicates whether the value is mandatory
     *
     * @return $this
     */
    public function setMandatory($mandatory)
    {
        $this->container['mandatory'] = $mandatory;

        return $this;
    }

    /**
     * Gets organizations
     *
     * @return \Membercare\Client\Model\SimpleOrganization[]
     */
    public function getOrganizations()
    {
        return $this->container['organizations'];
    }

    /**
     * Sets organizations
     *
     * @param \Membercare\Client\Model\SimpleOrganization[] $organizations A list of organizations associated with the custom field definition
     *
     * @return $this
     */
    public function setOrganizations($organizations)
    {
        $this->container['organizations'] = $organizations;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
