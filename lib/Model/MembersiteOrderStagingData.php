<?php
/**
 * MembersiteOrderStagingData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Membercare API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@membercare.dk
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Membercare\Client\Model;

use \ArrayAccess;
use \Membercare\Client\ObjectSerializer;

/**
 * MembersiteOrderStagingData Class Doc Comment
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MembersiteOrderStagingData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'MembersiteOrderStagingData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'shop_order_id' => 'int',
        'status' => '\Membercare\Client\Model\MembersiteOrderStagingDataStatus',
        'payload_model' => '\Membercare\Client\Model\MembersiteOrderStagingDataPayloadModel',
        'payload_format' => '\Membercare\Client\Model\MembersiteOrderStagingDataPayloadFormat',
        'payload' => 'string',
        'payer_datacard_id' => 'int',
        'payer_debtor_account_number' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int64',
        'shop_order_id' => 'int64',
        'status' => null,
        'payload_model' => null,
        'payload_format' => null,
        'payload' => null,
        'payer_datacard_id' => 'int64',
        'payer_debtor_account_number' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'shop_order_id' => 'shopOrderId',
        'status' => 'status',
        'payload_model' => 'payloadModel',
        'payload_format' => 'payloadFormat',
        'payload' => 'payload',
        'payer_datacard_id' => 'payerDatacardId',
        'payer_debtor_account_number' => 'payerDebtorAccountNumber'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'shop_order_id' => 'setShopOrderId',
        'status' => 'setStatus',
        'payload_model' => 'setPayloadModel',
        'payload_format' => 'setPayloadFormat',
        'payload' => 'setPayload',
        'payer_datacard_id' => 'setPayerDatacardId',
        'payer_debtor_account_number' => 'setPayerDebtorAccountNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'shop_order_id' => 'getShopOrderId',
        'status' => 'getStatus',
        'payload_model' => 'getPayloadModel',
        'payload_format' => 'getPayloadFormat',
        'payload' => 'getPayload',
        'payer_datacard_id' => 'getPayerDatacardId',
        'payer_debtor_account_number' => 'getPayerDebtorAccountNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['shop_order_id'] = isset($data['shop_order_id']) ? $data['shop_order_id'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['payload_model'] = isset($data['payload_model']) ? $data['payload_model'] : null;
        $this->container['payload_format'] = isset($data['payload_format']) ? $data['payload_format'] : null;
        $this->container['payload'] = isset($data['payload']) ? $data['payload'] : null;
        $this->container['payer_datacard_id'] = isset($data['payer_datacard_id']) ? $data['payer_datacard_id'] : null;
        $this->container['payer_debtor_account_number'] = isset($data['payer_debtor_account_number']) ? $data['payer_debtor_account_number'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id Primary key, should only be null object used as POST model
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets shop_order_id
     *
     * @return int
     */
    public function getShopOrderId()
    {
        return $this->container['shop_order_id'];
    }

    /**
     * Sets shop_order_id
     *
     * @param int $shop_order_id shop_order_id
     *
     * @return $this
     */
    public function setShopOrderId($shop_order_id)
    {
        $this->container['shop_order_id'] = $shop_order_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Membercare\Client\Model\MembersiteOrderStagingDataStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Membercare\Client\Model\MembersiteOrderStagingDataStatus $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets payload_model
     *
     * @return \Membercare\Client\Model\MembersiteOrderStagingDataPayloadModel
     */
    public function getPayloadModel()
    {
        return $this->container['payload_model'];
    }

    /**
     * Sets payload_model
     *
     * @param \Membercare\Client\Model\MembersiteOrderStagingDataPayloadModel $payload_model payload_model
     *
     * @return $this
     */
    public function setPayloadModel($payload_model)
    {
        $this->container['payload_model'] = $payload_model;

        return $this;
    }

    /**
     * Gets payload_format
     *
     * @return \Membercare\Client\Model\MembersiteOrderStagingDataPayloadFormat
     */
    public function getPayloadFormat()
    {
        return $this->container['payload_format'];
    }

    /**
     * Sets payload_format
     *
     * @param \Membercare\Client\Model\MembersiteOrderStagingDataPayloadFormat $payload_format payload_format
     *
     * @return $this
     */
    public function setPayloadFormat($payload_format)
    {
        $this->container['payload_format'] = $payload_format;

        return $this;
    }

    /**
     * Gets payload
     *
     * @return string
     */
    public function getPayload()
    {
        return $this->container['payload'];
    }

    /**
     * Sets payload
     *
     * @param string $payload payload
     *
     * @return $this
     */
    public function setPayload($payload)
    {
        $this->container['payload'] = $payload;

        return $this;
    }

    /**
     * Gets payer_datacard_id
     *
     * @return int
     */
    public function getPayerDatacardId()
    {
        return $this->container['payer_datacard_id'];
    }

    /**
     * Sets payer_datacard_id
     *
     * @param int $payer_datacard_id payer_datacard_id
     *
     * @return $this
     */
    public function setPayerDatacardId($payer_datacard_id)
    {
        $this->container['payer_datacard_id'] = $payer_datacard_id;

        return $this;
    }

    /**
     * Gets payer_debtor_account_number
     *
     * @return string
     */
    public function getPayerDebtorAccountNumber()
    {
        return $this->container['payer_debtor_account_number'];
    }

    /**
     * Sets payer_debtor_account_number
     *
     * @param string $payer_debtor_account_number Only exists as temporary storage in order to set this object's PayerDatacardId if needed somewhere
     *
     * @return $this
     */
    public function setPayerDebtorAccountNumber($payer_debtor_account_number)
    {
        $this->container['payer_debtor_account_number'] = $payer_debtor_account_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
