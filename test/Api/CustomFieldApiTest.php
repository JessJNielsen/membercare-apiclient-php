<?php
/**
 * CustomFieldApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Membercare API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@membercare.dk
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Membercare\Client;

use Membercare\Client\Configuration;
use Membercare\Client\ApiException;
use Membercare\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CustomFieldApiTest Class Doc Comment
 *
 * @category Class
 * @package  Membercare\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomFieldApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for customFieldTypeApi
     *
     * Retrieves a specific CustomFieldType which corresponds to the given identifier..
     *
     */
    public function testCustomFieldTypeApi()
    {
    }

    /**
     * Test case for customFieldTypesApi
     *
     * Retrieves a paged result of all CustomFieldTypes defined in Membercare.
     *
     */
    public function testCustomFieldTypesApi()
    {
    }

    /**
     * Test case for customFieldValueApi
     *
     * Retrieves a specific CustomFieldValue which corresponds to the passed identifier..
     *
     */
    public function testCustomFieldValueApi()
    {
    }

    /**
     * Test case for customFieldValuesApi
     *
     * Retrieves a paged result of all CustomFieldValues for the given CustomFieldType.
     *
     */
    public function testCustomFieldValuesApi()
    {
    }

    /**
     * Test case for deleteCustomFieldTableValueOrganization
     *
     * Delete link between organization and Customfieldtablevalue.
     *
     */
    public function testDeleteCustomFieldTableValueOrganization()
    {
    }

    /**
     * Test case for deleteCustomFieldTypeOrganization
     *
     * Removes the connection between the customfieldDefinition and the organization.
     *
     */
    public function testDeleteCustomFieldTypeOrganization()
    {
    }

    /**
     * Test case for deleteCustomFieldValue
     *
     * Deletes a custom field value.
     *
     */
    public function testDeleteCustomFieldValue()
    {
    }

    /**
     * Test case for deleteCustomFieldValueDEPRECATED
     *
     * Deletes a custom field value.
     *
     */
    public function testDeleteCustomFieldValueDEPRECATED()
    {
    }

    /**
     * Test case for postCustomFieldTableValueOrganization
     *
     * Create link between organization and Customfieldtablevalue.
     *
     */
    public function testPostCustomFieldTableValueOrganization()
    {
    }

    /**
     * Test case for postCustomFieldTableValueString
     *
     * Save a new table value of type \"string\" on a customfield table.
     *
     */
    public function testPostCustomFieldTableValueString()
    {
    }

    /**
     * Test case for postCustomFieldTypeOrganization
     *
     * Creates a connection between the customfieldDefinition and the organization.
     *
     */
    public function testPostCustomFieldTypeOrganization()
    {
    }

    /**
     * Test case for putCustomFieldValue
     *
     * Takes a CustomFieldValue, and updates its StartDate, EndDate and Value.  Note that the following values Must be assigned:      - CustomFieldValue.Id      - CustomFieldValue.StartDate      - CustomFieldValue.Value      - Optional, the EndDate can be assigned      - Optional, the Description can be assigned.
     *
     */
    public function testPutCustomFieldValue()
    {
    }
}
